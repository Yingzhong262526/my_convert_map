// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: map.proto

#ifndef PROTOBUF_map_2eproto__INCLUDED
#define PROTOBUF_map_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3005001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include <google/protobuf/wrappers.pb.h>
// @@protoc_insertion_point(includes)

namespace protobuf_map_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[14];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
void InitDefaultsMessage_MapPropertyImpl();
void InitDefaultsMessage_MapProperty();
void InitDefaultsMessage_MapPosImpl();
void InitDefaultsMessage_MapPos();
void InitDefaultsMessage_MapLineImpl();
void InitDefaultsMessage_MapLine();
void InitDefaultsMessage_MapHeaderImpl();
void InitDefaultsMessage_MapHeader();
void InitDefaultsMessage_MapAttributeImpl();
void InitDefaultsMessage_MapAttribute();
void InitDefaultsMessage_AdvancedPointImpl();
void InitDefaultsMessage_AdvancedPoint();
void InitDefaultsMessage_AdvancedLineImpl();
void InitDefaultsMessage_AdvancedLine();
void InitDefaultsMessage_AdvancedCurveImpl();
void InitDefaultsMessage_AdvancedCurve();
void InitDefaultsMessage_AdvancedAreaImpl();
void InitDefaultsMessage_AdvancedArea();
void InitDefaultsMessage_LaserDeviceImpl();
void InitDefaultsMessage_LaserDevice();
void InitDefaultsMessage_DeviceImpl();
void InitDefaultsMessage_Device();
void InitDefaultsMessage_PatrolRouteStationImpl();
void InitDefaultsMessage_PatrolRouteStation();
void InitDefaultsMessage_PatrolRouteImpl();
void InitDefaultsMessage_PatrolRoute();
void InitDefaultsMessage_MapImpl();
void InitDefaultsMessage_Map();
inline void InitDefaults() {
  InitDefaultsMessage_MapProperty();
  InitDefaultsMessage_MapPos();
  InitDefaultsMessage_MapLine();
  InitDefaultsMessage_MapHeader();
  InitDefaultsMessage_MapAttribute();
  InitDefaultsMessage_AdvancedPoint();
  InitDefaultsMessage_AdvancedLine();
  InitDefaultsMessage_AdvancedCurve();
  InitDefaultsMessage_AdvancedArea();
  InitDefaultsMessage_LaserDevice();
  InitDefaultsMessage_Device();
  InitDefaultsMessage_PatrolRouteStation();
  InitDefaultsMessage_PatrolRoute();
  InitDefaultsMessage_Map();
}
}  // namespace protobuf_map_2eproto
class Message_AdvancedArea;
class Message_AdvancedAreaDefaultTypeInternal;
extern Message_AdvancedAreaDefaultTypeInternal _Message_AdvancedArea_default_instance_;
class Message_AdvancedCurve;
class Message_AdvancedCurveDefaultTypeInternal;
extern Message_AdvancedCurveDefaultTypeInternal _Message_AdvancedCurve_default_instance_;
class Message_AdvancedLine;
class Message_AdvancedLineDefaultTypeInternal;
extern Message_AdvancedLineDefaultTypeInternal _Message_AdvancedLine_default_instance_;
class Message_AdvancedPoint;
class Message_AdvancedPointDefaultTypeInternal;
extern Message_AdvancedPointDefaultTypeInternal _Message_AdvancedPoint_default_instance_;
class Message_Device;
class Message_DeviceDefaultTypeInternal;
extern Message_DeviceDefaultTypeInternal _Message_Device_default_instance_;
class Message_LaserDevice;
class Message_LaserDeviceDefaultTypeInternal;
extern Message_LaserDeviceDefaultTypeInternal _Message_LaserDevice_default_instance_;
class Message_Map;
class Message_MapDefaultTypeInternal;
extern Message_MapDefaultTypeInternal _Message_Map_default_instance_;
class Message_MapAttribute;
class Message_MapAttributeDefaultTypeInternal;
extern Message_MapAttributeDefaultTypeInternal _Message_MapAttribute_default_instance_;
class Message_MapHeader;
class Message_MapHeaderDefaultTypeInternal;
extern Message_MapHeaderDefaultTypeInternal _Message_MapHeader_default_instance_;
class Message_MapLine;
class Message_MapLineDefaultTypeInternal;
extern Message_MapLineDefaultTypeInternal _Message_MapLine_default_instance_;
class Message_MapPos;
class Message_MapPosDefaultTypeInternal;
extern Message_MapPosDefaultTypeInternal _Message_MapPos_default_instance_;
class Message_MapProperty;
class Message_MapPropertyDefaultTypeInternal;
extern Message_MapPropertyDefaultTypeInternal _Message_MapProperty_default_instance_;
class Message_PatrolRoute;
class Message_PatrolRouteDefaultTypeInternal;
extern Message_PatrolRouteDefaultTypeInternal _Message_PatrolRoute_default_instance_;
class Message_PatrolRouteStation;
class Message_PatrolRouteStationDefaultTypeInternal;
extern Message_PatrolRouteStationDefaultTypeInternal _Message_PatrolRouteStation_default_instance_;

// ===================================================================

class Message_MapProperty : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Message_MapProperty) */ {
 public:
  Message_MapProperty();
  virtual ~Message_MapProperty();

  Message_MapProperty(const Message_MapProperty& from);

  inline Message_MapProperty& operator=(const Message_MapProperty& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Message_MapProperty(Message_MapProperty&& from) noexcept
    : Message_MapProperty() {
    *this = ::std::move(from);
  }

  inline Message_MapProperty& operator=(Message_MapProperty&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Message_MapProperty& default_instance();

  enum OneofValueCase {
    kStringValue = 4,
    kBoolValue = 5,
    kInt32Value = 6,
    kUint32Value = 7,
    kInt64Value = 8,
    kUint64Value = 9,
    kFloatValue = 10,
    kDoubleValue = 11,
    kBytesValue = 12,
    ONEOF_VALUE_NOT_SET = 0,
  };

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Message_MapProperty* internal_default_instance() {
    return reinterpret_cast<const Message_MapProperty*>(
               &_Message_MapProperty_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(Message_MapProperty* other);
  friend void swap(Message_MapProperty& a, Message_MapProperty& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Message_MapProperty* New() const PROTOBUF_FINAL { return New(NULL); }

  Message_MapProperty* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Message_MapProperty& from);
  void MergeFrom(const Message_MapProperty& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Message_MapProperty* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string key = 1;
  void clear_key();
  static const int kKeyFieldNumber = 1;
  const ::std::string& key() const;
  void set_key(const ::std::string& value);
  #if LANG_CXX11
  void set_key(::std::string&& value);
  #endif
  void set_key(const char* value);
  void set_key(const char* value, size_t size);
  ::std::string* mutable_key();
  ::std::string* release_key();
  void set_allocated_key(::std::string* key);

  // string type = 2;
  void clear_type();
  static const int kTypeFieldNumber = 2;
  const ::std::string& type() const;
  void set_type(const ::std::string& value);
  #if LANG_CXX11
  void set_type(::std::string&& value);
  #endif
  void set_type(const char* value);
  void set_type(const char* value, size_t size);
  ::std::string* mutable_type();
  ::std::string* release_type();
  void set_allocated_type(::std::string* type);

  // bytes value = 3;
  void clear_value();
  static const int kValueFieldNumber = 3;
  const ::std::string& value() const;
  void set_value(const ::std::string& value);
  #if LANG_CXX11
  void set_value(::std::string&& value);
  #endif
  void set_value(const char* value);
  void set_value(const void* value, size_t size);
  ::std::string* mutable_value();
  ::std::string* release_value();
  void set_allocated_value(::std::string* value);

  // string string_value = 4;
  private:
  bool has_string_value() const;
  public:
  void clear_string_value();
  static const int kStringValueFieldNumber = 4;
  const ::std::string& string_value() const;
  void set_string_value(const ::std::string& value);
  #if LANG_CXX11
  void set_string_value(::std::string&& value);
  #endif
  void set_string_value(const char* value);
  void set_string_value(const char* value, size_t size);
  ::std::string* mutable_string_value();
  ::std::string* release_string_value();
  void set_allocated_string_value(::std::string* string_value);

  // bool bool_value = 5;
  private:
  bool has_bool_value() const;
  public:
  void clear_bool_value();
  static const int kBoolValueFieldNumber = 5;
  bool bool_value() const;
  void set_bool_value(bool value);

  // int32 int32_value = 6;
  private:
  bool has_int32_value() const;
  public:
  void clear_int32_value();
  static const int kInt32ValueFieldNumber = 6;
  ::google::protobuf::int32 int32_value() const;
  void set_int32_value(::google::protobuf::int32 value);

  // uint32 uint32_value = 7;
  private:
  bool has_uint32_value() const;
  public:
  void clear_uint32_value();
  static const int kUint32ValueFieldNumber = 7;
  ::google::protobuf::uint32 uint32_value() const;
  void set_uint32_value(::google::protobuf::uint32 value);

  // int64 int64_value = 8;
  private:
  bool has_int64_value() const;
  public:
  void clear_int64_value();
  static const int kInt64ValueFieldNumber = 8;
  ::google::protobuf::int64 int64_value() const;
  void set_int64_value(::google::protobuf::int64 value);

  // uint64 uint64_value = 9;
  private:
  bool has_uint64_value() const;
  public:
  void clear_uint64_value();
  static const int kUint64ValueFieldNumber = 9;
  ::google::protobuf::uint64 uint64_value() const;
  void set_uint64_value(::google::protobuf::uint64 value);

  // float float_value = 10;
  private:
  bool has_float_value() const;
  public:
  void clear_float_value();
  static const int kFloatValueFieldNumber = 10;
  float float_value() const;
  void set_float_value(float value);

  // double double_value = 11;
  private:
  bool has_double_value() const;
  public:
  void clear_double_value();
  static const int kDoubleValueFieldNumber = 11;
  double double_value() const;
  void set_double_value(double value);

  // bytes bytes_value = 12;
  private:
  bool has_bytes_value() const;
  public:
  void clear_bytes_value();
  static const int kBytesValueFieldNumber = 12;
  const ::std::string& bytes_value() const;
  void set_bytes_value(const ::std::string& value);
  #if LANG_CXX11
  void set_bytes_value(::std::string&& value);
  #endif
  void set_bytes_value(const char* value);
  void set_bytes_value(const void* value, size_t size);
  ::std::string* mutable_bytes_value();
  ::std::string* release_bytes_value();
  void set_allocated_bytes_value(::std::string* bytes_value);

  OneofValueCase oneof_value_case() const;
  // @@protoc_insertion_point(class_scope:Message_MapProperty)
 private:
  void set_has_string_value();
  void set_has_bool_value();
  void set_has_int32_value();
  void set_has_uint32_value();
  void set_has_int64_value();
  void set_has_uint64_value();
  void set_has_float_value();
  void set_has_double_value();
  void set_has_bytes_value();

  inline bool has_oneof_value() const;
  void clear_oneof_value();
  inline void clear_has_oneof_value();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr key_;
  ::google::protobuf::internal::ArenaStringPtr type_;
  ::google::protobuf::internal::ArenaStringPtr value_;
  union OneofValueUnion {
    OneofValueUnion() {}
    ::google::protobuf::internal::ArenaStringPtr string_value_;
    bool bool_value_;
    ::google::protobuf::int32 int32_value_;
    ::google::protobuf::uint32 uint32_value_;
    ::google::protobuf::int64 int64_value_;
    ::google::protobuf::uint64 uint64_value_;
    float float_value_;
    double double_value_;
    ::google::protobuf::internal::ArenaStringPtr bytes_value_;
  } oneof_value_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 _oneof_case_[1];

  friend struct ::protobuf_map_2eproto::TableStruct;
  friend void ::protobuf_map_2eproto::InitDefaultsMessage_MapPropertyImpl();
};
// -------------------------------------------------------------------

class Message_MapPos : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Message_MapPos) */ {
 public:
  Message_MapPos();
  virtual ~Message_MapPos();

  Message_MapPos(const Message_MapPos& from);

  inline Message_MapPos& operator=(const Message_MapPos& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Message_MapPos(Message_MapPos&& from) noexcept
    : Message_MapPos() {
    *this = ::std::move(from);
  }

  inline Message_MapPos& operator=(Message_MapPos&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Message_MapPos& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Message_MapPos* internal_default_instance() {
    return reinterpret_cast<const Message_MapPos*>(
               &_Message_MapPos_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void Swap(Message_MapPos* other);
  friend void swap(Message_MapPos& a, Message_MapPos& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Message_MapPos* New() const PROTOBUF_FINAL { return New(NULL); }

  Message_MapPos* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Message_MapPos& from);
  void MergeFrom(const Message_MapPos& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Message_MapPos* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // double x = 1;
  void clear_x();
  static const int kXFieldNumber = 1;
  double x() const;
  void set_x(double value);

  // double y = 2;
  void clear_y();
  static const int kYFieldNumber = 2;
  double y() const;
  void set_y(double value);

  // @@protoc_insertion_point(class_scope:Message_MapPos)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  double x_;
  double y_;
  mutable int _cached_size_;
  friend struct ::protobuf_map_2eproto::TableStruct;
  friend void ::protobuf_map_2eproto::InitDefaultsMessage_MapPosImpl();
};
// -------------------------------------------------------------------

class Message_MapLine : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Message_MapLine) */ {
 public:
  Message_MapLine();
  virtual ~Message_MapLine();

  Message_MapLine(const Message_MapLine& from);

  inline Message_MapLine& operator=(const Message_MapLine& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Message_MapLine(Message_MapLine&& from) noexcept
    : Message_MapLine() {
    *this = ::std::move(from);
  }

  inline Message_MapLine& operator=(Message_MapLine&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Message_MapLine& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Message_MapLine* internal_default_instance() {
    return reinterpret_cast<const Message_MapLine*>(
               &_Message_MapLine_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    2;

  void Swap(Message_MapLine* other);
  friend void swap(Message_MapLine& a, Message_MapLine& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Message_MapLine* New() const PROTOBUF_FINAL { return New(NULL); }

  Message_MapLine* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Message_MapLine& from);
  void MergeFrom(const Message_MapLine& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Message_MapLine* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .Message_MapPos start_pos = 1;
  bool has_start_pos() const;
  void clear_start_pos();
  static const int kStartPosFieldNumber = 1;
  const ::Message_MapPos& start_pos() const;
  ::Message_MapPos* release_start_pos();
  ::Message_MapPos* mutable_start_pos();
  void set_allocated_start_pos(::Message_MapPos* start_pos);

  // .Message_MapPos end_pos = 2;
  bool has_end_pos() const;
  void clear_end_pos();
  static const int kEndPosFieldNumber = 2;
  const ::Message_MapPos& end_pos() const;
  ::Message_MapPos* release_end_pos();
  ::Message_MapPos* mutable_end_pos();
  void set_allocated_end_pos(::Message_MapPos* end_pos);

  // @@protoc_insertion_point(class_scope:Message_MapLine)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::Message_MapPos* start_pos_;
  ::Message_MapPos* end_pos_;
  mutable int _cached_size_;
  friend struct ::protobuf_map_2eproto::TableStruct;
  friend void ::protobuf_map_2eproto::InitDefaultsMessage_MapLineImpl();
};
// -------------------------------------------------------------------

class Message_MapHeader : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Message_MapHeader) */ {
 public:
  Message_MapHeader();
  virtual ~Message_MapHeader();

  Message_MapHeader(const Message_MapHeader& from);

  inline Message_MapHeader& operator=(const Message_MapHeader& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Message_MapHeader(Message_MapHeader&& from) noexcept
    : Message_MapHeader() {
    *this = ::std::move(from);
  }

  inline Message_MapHeader& operator=(Message_MapHeader&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Message_MapHeader& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Message_MapHeader* internal_default_instance() {
    return reinterpret_cast<const Message_MapHeader*>(
               &_Message_MapHeader_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    3;

  void Swap(Message_MapHeader* other);
  friend void swap(Message_MapHeader& a, Message_MapHeader& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Message_MapHeader* New() const PROTOBUF_FINAL { return New(NULL); }

  Message_MapHeader* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Message_MapHeader& from);
  void MergeFrom(const Message_MapHeader& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Message_MapHeader* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string map_type = 1;
  void clear_map_type();
  static const int kMapTypeFieldNumber = 1;
  const ::std::string& map_type() const;
  void set_map_type(const ::std::string& value);
  #if LANG_CXX11
  void set_map_type(::std::string&& value);
  #endif
  void set_map_type(const char* value);
  void set_map_type(const char* value, size_t size);
  ::std::string* mutable_map_type();
  ::std::string* release_map_type();
  void set_allocated_map_type(::std::string* map_type);

  // string map_name = 2;
  void clear_map_name();
  static const int kMapNameFieldNumber = 2;
  const ::std::string& map_name() const;
  void set_map_name(const ::std::string& value);
  #if LANG_CXX11
  void set_map_name(::std::string&& value);
  #endif
  void set_map_name(const char* value);
  void set_map_name(const char* value, size_t size);
  ::std::string* mutable_map_name();
  ::std::string* release_map_name();
  void set_allocated_map_name(::std::string* map_name);

  // string version = 8;
  void clear_version();
  static const int kVersionFieldNumber = 8;
  const ::std::string& version() const;
  void set_version(const ::std::string& value);
  #if LANG_CXX11
  void set_version(::std::string&& value);
  #endif
  void set_version(const char* value);
  void set_version(const char* value, size_t size);
  ::std::string* mutable_version();
  ::std::string* release_version();
  void set_allocated_version(::std::string* version);

  // .Message_MapPos min_pos = 3;
  bool has_min_pos() const;
  void clear_min_pos();
  static const int kMinPosFieldNumber = 3;
  const ::Message_MapPos& min_pos() const;
  ::Message_MapPos* release_min_pos();
  ::Message_MapPos* mutable_min_pos();
  void set_allocated_min_pos(::Message_MapPos* min_pos);

  // .Message_MapPos max_pos = 4;
  bool has_max_pos() const;
  void clear_max_pos();
  static const int kMaxPosFieldNumber = 4;
  const ::Message_MapPos& max_pos() const;
  ::Message_MapPos* release_max_pos();
  ::Message_MapPos* mutable_max_pos();
  void set_allocated_max_pos(::Message_MapPos* max_pos);

  // double resolution = 5;
  void clear_resolution();
  static const int kResolutionFieldNumber = 5;
  double resolution() const;
  void set_resolution(double value);

  // @@protoc_insertion_point(class_scope:Message_MapHeader)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr map_type_;
  ::google::protobuf::internal::ArenaStringPtr map_name_;
  ::google::protobuf::internal::ArenaStringPtr version_;
  ::Message_MapPos* min_pos_;
  ::Message_MapPos* max_pos_;
  double resolution_;
  mutable int _cached_size_;
  friend struct ::protobuf_map_2eproto::TableStruct;
  friend void ::protobuf_map_2eproto::InitDefaultsMessage_MapHeaderImpl();
};
// -------------------------------------------------------------------

class Message_MapAttribute : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Message_MapAttribute) */ {
 public:
  Message_MapAttribute();
  virtual ~Message_MapAttribute();

  Message_MapAttribute(const Message_MapAttribute& from);

  inline Message_MapAttribute& operator=(const Message_MapAttribute& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Message_MapAttribute(Message_MapAttribute&& from) noexcept
    : Message_MapAttribute() {
    *this = ::std::move(from);
  }

  inline Message_MapAttribute& operator=(Message_MapAttribute&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Message_MapAttribute& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Message_MapAttribute* internal_default_instance() {
    return reinterpret_cast<const Message_MapAttribute*>(
               &_Message_MapAttribute_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    4;

  void Swap(Message_MapAttribute* other);
  friend void swap(Message_MapAttribute& a, Message_MapAttribute& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Message_MapAttribute* New() const PROTOBUF_FINAL { return New(NULL); }

  Message_MapAttribute* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Message_MapAttribute& from);
  void MergeFrom(const Message_MapAttribute& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Message_MapAttribute* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string description = 1;
  void clear_description();
  static const int kDescriptionFieldNumber = 1;
  const ::std::string& description() const;
  void set_description(const ::std::string& value);
  #if LANG_CXX11
  void set_description(::std::string&& value);
  #endif
  void set_description(const char* value);
  void set_description(const char* value, size_t size);
  ::std::string* mutable_description();
  ::std::string* release_description();
  void set_allocated_description(::std::string* description);

  // uint32 color_pen = 2;
  void clear_color_pen();
  static const int kColorPenFieldNumber = 2;
  ::google::protobuf::uint32 color_pen() const;
  void set_color_pen(::google::protobuf::uint32 value);

  // uint32 color_brush = 3;
  void clear_color_brush();
  static const int kColorBrushFieldNumber = 3;
  ::google::protobuf::uint32 color_brush() const;
  void set_color_brush(::google::protobuf::uint32 value);

  // uint32 color_font = 4;
  void clear_color_font();
  static const int kColorFontFieldNumber = 4;
  ::google::protobuf::uint32 color_font() const;
  void set_color_font(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:Message_MapAttribute)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr description_;
  ::google::protobuf::uint32 color_pen_;
  ::google::protobuf::uint32 color_brush_;
  ::google::protobuf::uint32 color_font_;
  mutable int _cached_size_;
  friend struct ::protobuf_map_2eproto::TableStruct;
  friend void ::protobuf_map_2eproto::InitDefaultsMessage_MapAttributeImpl();
};
// -------------------------------------------------------------------

class Message_AdvancedPoint : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Message_AdvancedPoint) */ {
 public:
  Message_AdvancedPoint();
  virtual ~Message_AdvancedPoint();

  Message_AdvancedPoint(const Message_AdvancedPoint& from);

  inline Message_AdvancedPoint& operator=(const Message_AdvancedPoint& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Message_AdvancedPoint(Message_AdvancedPoint&& from) noexcept
    : Message_AdvancedPoint() {
    *this = ::std::move(from);
  }

  inline Message_AdvancedPoint& operator=(Message_AdvancedPoint&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Message_AdvancedPoint& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Message_AdvancedPoint* internal_default_instance() {
    return reinterpret_cast<const Message_AdvancedPoint*>(
               &_Message_AdvancedPoint_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    5;

  void Swap(Message_AdvancedPoint* other);
  friend void swap(Message_AdvancedPoint& a, Message_AdvancedPoint& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Message_AdvancedPoint* New() const PROTOBUF_FINAL { return New(NULL); }

  Message_AdvancedPoint* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Message_AdvancedPoint& from);
  void MergeFrom(const Message_AdvancedPoint& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Message_AdvancedPoint* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .Message_MapProperty property = 5;
  int property_size() const;
  void clear_property();
  static const int kPropertyFieldNumber = 5;
  const ::Message_MapProperty& property(int index) const;
  ::Message_MapProperty* mutable_property(int index);
  ::Message_MapProperty* add_property();
  ::google::protobuf::RepeatedPtrField< ::Message_MapProperty >*
      mutable_property();
  const ::google::protobuf::RepeatedPtrField< ::Message_MapProperty >&
      property() const;

  // string class_name = 1;
  void clear_class_name();
  static const int kClassNameFieldNumber = 1;
  const ::std::string& class_name() const;
  void set_class_name(const ::std::string& value);
  #if LANG_CXX11
  void set_class_name(::std::string&& value);
  #endif
  void set_class_name(const char* value);
  void set_class_name(const char* value, size_t size);
  ::std::string* mutable_class_name();
  ::std::string* release_class_name();
  void set_allocated_class_name(::std::string* class_name);

  // string instance_name = 2;
  void clear_instance_name();
  static const int kInstanceNameFieldNumber = 2;
  const ::std::string& instance_name() const;
  void set_instance_name(const ::std::string& value);
  #if LANG_CXX11
  void set_instance_name(::std::string&& value);
  #endif
  void set_instance_name(const char* value);
  void set_instance_name(const char* value, size_t size);
  ::std::string* mutable_instance_name();
  ::std::string* release_instance_name();
  void set_allocated_instance_name(::std::string* instance_name);

  // .Message_MapPos pos = 3;
  bool has_pos() const;
  void clear_pos();
  static const int kPosFieldNumber = 3;
  const ::Message_MapPos& pos() const;
  ::Message_MapPos* release_pos();
  ::Message_MapPos* mutable_pos();
  void set_allocated_pos(::Message_MapPos* pos);

  // .Message_MapAttribute attribute = 10;
  bool has_attribute() const;
  void clear_attribute();
  static const int kAttributeFieldNumber = 10;
  const ::Message_MapAttribute& attribute() const;
  ::Message_MapAttribute* release_attribute();
  ::Message_MapAttribute* mutable_attribute();
  void set_allocated_attribute(::Message_MapAttribute* attribute);

  // double dir = 4;
  void clear_dir();
  static const int kDirFieldNumber = 4;
  double dir() const;
  void set_dir(double value);

  // @@protoc_insertion_point(class_scope:Message_AdvancedPoint)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::Message_MapProperty > property_;
  ::google::protobuf::internal::ArenaStringPtr class_name_;
  ::google::protobuf::internal::ArenaStringPtr instance_name_;
  ::Message_MapPos* pos_;
  ::Message_MapAttribute* attribute_;
  double dir_;
  mutable int _cached_size_;
  friend struct ::protobuf_map_2eproto::TableStruct;
  friend void ::protobuf_map_2eproto::InitDefaultsMessage_AdvancedPointImpl();
};
// -------------------------------------------------------------------

class Message_AdvancedLine : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Message_AdvancedLine) */ {
 public:
  Message_AdvancedLine();
  virtual ~Message_AdvancedLine();

  Message_AdvancedLine(const Message_AdvancedLine& from);

  inline Message_AdvancedLine& operator=(const Message_AdvancedLine& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Message_AdvancedLine(Message_AdvancedLine&& from) noexcept
    : Message_AdvancedLine() {
    *this = ::std::move(from);
  }

  inline Message_AdvancedLine& operator=(Message_AdvancedLine&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Message_AdvancedLine& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Message_AdvancedLine* internal_default_instance() {
    return reinterpret_cast<const Message_AdvancedLine*>(
               &_Message_AdvancedLine_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    6;

  void Swap(Message_AdvancedLine* other);
  friend void swap(Message_AdvancedLine& a, Message_AdvancedLine& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Message_AdvancedLine* New() const PROTOBUF_FINAL { return New(NULL); }

  Message_AdvancedLine* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Message_AdvancedLine& from);
  void MergeFrom(const Message_AdvancedLine& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Message_AdvancedLine* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .Message_MapProperty property = 4;
  int property_size() const;
  void clear_property();
  static const int kPropertyFieldNumber = 4;
  const ::Message_MapProperty& property(int index) const;
  ::Message_MapProperty* mutable_property(int index);
  ::Message_MapProperty* add_property();
  ::google::protobuf::RepeatedPtrField< ::Message_MapProperty >*
      mutable_property();
  const ::google::protobuf::RepeatedPtrField< ::Message_MapProperty >&
      property() const;

  // string class_name = 1;
  void clear_class_name();
  static const int kClassNameFieldNumber = 1;
  const ::std::string& class_name() const;
  void set_class_name(const ::std::string& value);
  #if LANG_CXX11
  void set_class_name(::std::string&& value);
  #endif
  void set_class_name(const char* value);
  void set_class_name(const char* value, size_t size);
  ::std::string* mutable_class_name();
  ::std::string* release_class_name();
  void set_allocated_class_name(::std::string* class_name);

  // string instance_name = 2;
  void clear_instance_name();
  static const int kInstanceNameFieldNumber = 2;
  const ::std::string& instance_name() const;
  void set_instance_name(const ::std::string& value);
  #if LANG_CXX11
  void set_instance_name(::std::string&& value);
  #endif
  void set_instance_name(const char* value);
  void set_instance_name(const char* value, size_t size);
  ::std::string* mutable_instance_name();
  ::std::string* release_instance_name();
  void set_allocated_instance_name(::std::string* instance_name);

  // .Message_MapLine line = 3;
  bool has_line() const;
  void clear_line();
  static const int kLineFieldNumber = 3;
  const ::Message_MapLine& line() const;
  ::Message_MapLine* release_line();
  ::Message_MapLine* mutable_line();
  void set_allocated_line(::Message_MapLine* line);

  // .Message_MapAttribute attribute = 10;
  bool has_attribute() const;
  void clear_attribute();
  static const int kAttributeFieldNumber = 10;
  const ::Message_MapAttribute& attribute() const;
  ::Message_MapAttribute* release_attribute();
  ::Message_MapAttribute* mutable_attribute();
  void set_allocated_attribute(::Message_MapAttribute* attribute);

  // @@protoc_insertion_point(class_scope:Message_AdvancedLine)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::Message_MapProperty > property_;
  ::google::protobuf::internal::ArenaStringPtr class_name_;
  ::google::protobuf::internal::ArenaStringPtr instance_name_;
  ::Message_MapLine* line_;
  ::Message_MapAttribute* attribute_;
  mutable int _cached_size_;
  friend struct ::protobuf_map_2eproto::TableStruct;
  friend void ::protobuf_map_2eproto::InitDefaultsMessage_AdvancedLineImpl();
};
// -------------------------------------------------------------------

class Message_AdvancedCurve : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Message_AdvancedCurve) */ {
 public:
  Message_AdvancedCurve();
  virtual ~Message_AdvancedCurve();

  Message_AdvancedCurve(const Message_AdvancedCurve& from);

  inline Message_AdvancedCurve& operator=(const Message_AdvancedCurve& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Message_AdvancedCurve(Message_AdvancedCurve&& from) noexcept
    : Message_AdvancedCurve() {
    *this = ::std::move(from);
  }

  inline Message_AdvancedCurve& operator=(Message_AdvancedCurve&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Message_AdvancedCurve& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Message_AdvancedCurve* internal_default_instance() {
    return reinterpret_cast<const Message_AdvancedCurve*>(
               &_Message_AdvancedCurve_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    7;

  void Swap(Message_AdvancedCurve* other);
  friend void swap(Message_AdvancedCurve& a, Message_AdvancedCurve& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Message_AdvancedCurve* New() const PROTOBUF_FINAL { return New(NULL); }

  Message_AdvancedCurve* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Message_AdvancedCurve& from);
  void MergeFrom(const Message_AdvancedCurve& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Message_AdvancedCurve* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .Message_MapProperty property = 7;
  int property_size() const;
  void clear_property();
  static const int kPropertyFieldNumber = 7;
  const ::Message_MapProperty& property(int index) const;
  ::Message_MapProperty* mutable_property(int index);
  ::Message_MapProperty* add_property();
  ::google::protobuf::RepeatedPtrField< ::Message_MapProperty >*
      mutable_property();
  const ::google::protobuf::RepeatedPtrField< ::Message_MapProperty >&
      property() const;

  // repeated .Message_Device devices = 12;
  int devices_size() const;
  void clear_devices();
  static const int kDevicesFieldNumber = 12;
  const ::Message_Device& devices(int index) const;
  ::Message_Device* mutable_devices(int index);
  ::Message_Device* add_devices();
  ::google::protobuf::RepeatedPtrField< ::Message_Device >*
      mutable_devices();
  const ::google::protobuf::RepeatedPtrField< ::Message_Device >&
      devices() const;

  // string class_name = 1;
  void clear_class_name();
  static const int kClassNameFieldNumber = 1;
  const ::std::string& class_name() const;
  void set_class_name(const ::std::string& value);
  #if LANG_CXX11
  void set_class_name(::std::string&& value);
  #endif
  void set_class_name(const char* value);
  void set_class_name(const char* value, size_t size);
  ::std::string* mutable_class_name();
  ::std::string* release_class_name();
  void set_allocated_class_name(::std::string* class_name);

  // string instance_name = 2;
  void clear_instance_name();
  static const int kInstanceNameFieldNumber = 2;
  const ::std::string& instance_name() const;
  void set_instance_name(const ::std::string& value);
  #if LANG_CXX11
  void set_instance_name(::std::string&& value);
  #endif
  void set_instance_name(const char* value);
  void set_instance_name(const char* value, size_t size);
  ::std::string* mutable_instance_name();
  ::std::string* release_instance_name();
  void set_allocated_instance_name(::std::string* instance_name);

  // .Message_AdvancedPoint start_pos = 3;
  bool has_start_pos() const;
  void clear_start_pos();
  static const int kStartPosFieldNumber = 3;
  const ::Message_AdvancedPoint& start_pos() const;
  ::Message_AdvancedPoint* release_start_pos();
  ::Message_AdvancedPoint* mutable_start_pos();
  void set_allocated_start_pos(::Message_AdvancedPoint* start_pos);

  // .Message_AdvancedPoint end_pos = 4;
  bool has_end_pos() const;
  void clear_end_pos();
  static const int kEndPosFieldNumber = 4;
  const ::Message_AdvancedPoint& end_pos() const;
  ::Message_AdvancedPoint* release_end_pos();
  ::Message_AdvancedPoint* mutable_end_pos();
  void set_allocated_end_pos(::Message_AdvancedPoint* end_pos);

  // .Message_MapPos control_pos1 = 5;
  bool has_control_pos1() const;
  void clear_control_pos1();
  static const int kControlPos1FieldNumber = 5;
  const ::Message_MapPos& control_pos1() const;
  ::Message_MapPos* release_control_pos1();
  ::Message_MapPos* mutable_control_pos1();
  void set_allocated_control_pos1(::Message_MapPos* control_pos1);

  // .Message_MapPos control_pos2 = 6;
  bool has_control_pos2() const;
  void clear_control_pos2();
  static const int kControlPos2FieldNumber = 6;
  const ::Message_MapPos& control_pos2() const;
  ::Message_MapPos* release_control_pos2();
  ::Message_MapPos* mutable_control_pos2();
  void set_allocated_control_pos2(::Message_MapPos* control_pos2);

  // .Message_MapAttribute attribute = 15;
  bool has_attribute() const;
  void clear_attribute();
  static const int kAttributeFieldNumber = 15;
  const ::Message_MapAttribute& attribute() const;
  ::Message_MapAttribute* release_attribute();
  ::Message_MapAttribute* mutable_attribute();
  void set_allocated_attribute(::Message_MapAttribute* attribute);

  // @@protoc_insertion_point(class_scope:Message_AdvancedCurve)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::Message_MapProperty > property_;
  ::google::protobuf::RepeatedPtrField< ::Message_Device > devices_;
  ::google::protobuf::internal::ArenaStringPtr class_name_;
  ::google::protobuf::internal::ArenaStringPtr instance_name_;
  ::Message_AdvancedPoint* start_pos_;
  ::Message_AdvancedPoint* end_pos_;
  ::Message_MapPos* control_pos1_;
  ::Message_MapPos* control_pos2_;
  ::Message_MapAttribute* attribute_;
  mutable int _cached_size_;
  friend struct ::protobuf_map_2eproto::TableStruct;
  friend void ::protobuf_map_2eproto::InitDefaultsMessage_AdvancedCurveImpl();
};
// -------------------------------------------------------------------

class Message_AdvancedArea : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Message_AdvancedArea) */ {
 public:
  Message_AdvancedArea();
  virtual ~Message_AdvancedArea();

  Message_AdvancedArea(const Message_AdvancedArea& from);

  inline Message_AdvancedArea& operator=(const Message_AdvancedArea& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Message_AdvancedArea(Message_AdvancedArea&& from) noexcept
    : Message_AdvancedArea() {
    *this = ::std::move(from);
  }

  inline Message_AdvancedArea& operator=(Message_AdvancedArea&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Message_AdvancedArea& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Message_AdvancedArea* internal_default_instance() {
    return reinterpret_cast<const Message_AdvancedArea*>(
               &_Message_AdvancedArea_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    8;

  void Swap(Message_AdvancedArea* other);
  friend void swap(Message_AdvancedArea& a, Message_AdvancedArea& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Message_AdvancedArea* New() const PROTOBUF_FINAL { return New(NULL); }

  Message_AdvancedArea* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Message_AdvancedArea& from);
  void MergeFrom(const Message_AdvancedArea& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Message_AdvancedArea* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .Message_MapPos pos_group = 3;
  int pos_group_size() const;
  void clear_pos_group();
  static const int kPosGroupFieldNumber = 3;
  const ::Message_MapPos& pos_group(int index) const;
  ::Message_MapPos* mutable_pos_group(int index);
  ::Message_MapPos* add_pos_group();
  ::google::protobuf::RepeatedPtrField< ::Message_MapPos >*
      mutable_pos_group();
  const ::google::protobuf::RepeatedPtrField< ::Message_MapPos >&
      pos_group() const;

  // repeated .Message_MapProperty property = 5;
  int property_size() const;
  void clear_property();
  static const int kPropertyFieldNumber = 5;
  const ::Message_MapProperty& property(int index) const;
  ::Message_MapProperty* mutable_property(int index);
  ::Message_MapProperty* add_property();
  ::google::protobuf::RepeatedPtrField< ::Message_MapProperty >*
      mutable_property();
  const ::google::protobuf::RepeatedPtrField< ::Message_MapProperty >&
      property() const;

  // repeated .Message_Device devices = 10;
  int devices_size() const;
  void clear_devices();
  static const int kDevicesFieldNumber = 10;
  const ::Message_Device& devices(int index) const;
  ::Message_Device* mutable_devices(int index);
  ::Message_Device* add_devices();
  ::google::protobuf::RepeatedPtrField< ::Message_Device >*
      mutable_devices();
  const ::google::protobuf::RepeatedPtrField< ::Message_Device >&
      devices() const;

  // string class_name = 1;
  void clear_class_name();
  static const int kClassNameFieldNumber = 1;
  const ::std::string& class_name() const;
  void set_class_name(const ::std::string& value);
  #if LANG_CXX11
  void set_class_name(::std::string&& value);
  #endif
  void set_class_name(const char* value);
  void set_class_name(const char* value, size_t size);
  ::std::string* mutable_class_name();
  ::std::string* release_class_name();
  void set_allocated_class_name(::std::string* class_name);

  // string instance_name = 2;
  void clear_instance_name();
  static const int kInstanceNameFieldNumber = 2;
  const ::std::string& instance_name() const;
  void set_instance_name(const ::std::string& value);
  #if LANG_CXX11
  void set_instance_name(::std::string&& value);
  #endif
  void set_instance_name(const char* value);
  void set_instance_name(const char* value, size_t size);
  ::std::string* mutable_instance_name();
  ::std::string* release_instance_name();
  void set_allocated_instance_name(::std::string* instance_name);

  // .Message_MapAttribute attribute = 15;
  bool has_attribute() const;
  void clear_attribute();
  static const int kAttributeFieldNumber = 15;
  const ::Message_MapAttribute& attribute() const;
  ::Message_MapAttribute* release_attribute();
  ::Message_MapAttribute* mutable_attribute();
  void set_allocated_attribute(::Message_MapAttribute* attribute);

  // double dir = 4;
  void clear_dir();
  static const int kDirFieldNumber = 4;
  double dir() const;
  void set_dir(double value);

  // @@protoc_insertion_point(class_scope:Message_AdvancedArea)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::Message_MapPos > pos_group_;
  ::google::protobuf::RepeatedPtrField< ::Message_MapProperty > property_;
  ::google::protobuf::RepeatedPtrField< ::Message_Device > devices_;
  ::google::protobuf::internal::ArenaStringPtr class_name_;
  ::google::protobuf::internal::ArenaStringPtr instance_name_;
  ::Message_MapAttribute* attribute_;
  double dir_;
  mutable int _cached_size_;
  friend struct ::protobuf_map_2eproto::TableStruct;
  friend void ::protobuf_map_2eproto::InitDefaultsMessage_AdvancedAreaImpl();
};
// -------------------------------------------------------------------

class Message_LaserDevice : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Message_LaserDevice) */ {
 public:
  Message_LaserDevice();
  virtual ~Message_LaserDevice();

  Message_LaserDevice(const Message_LaserDevice& from);

  inline Message_LaserDevice& operator=(const Message_LaserDevice& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Message_LaserDevice(Message_LaserDevice&& from) noexcept
    : Message_LaserDevice() {
    *this = ::std::move(from);
  }

  inline Message_LaserDevice& operator=(Message_LaserDevice&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Message_LaserDevice& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Message_LaserDevice* internal_default_instance() {
    return reinterpret_cast<const Message_LaserDevice*>(
               &_Message_LaserDevice_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    9;

  void Swap(Message_LaserDevice* other);
  friend void swap(Message_LaserDevice& a, Message_LaserDevice& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Message_LaserDevice* New() const PROTOBUF_FINAL { return New(NULL); }

  Message_LaserDevice* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Message_LaserDevice& from);
  void MergeFrom(const Message_LaserDevice& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Message_LaserDevice* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .Message_MapPos laser_margin_pos = 2;
  int laser_margin_pos_size() const;
  void clear_laser_margin_pos();
  static const int kLaserMarginPosFieldNumber = 2;
  const ::Message_MapPos& laser_margin_pos(int index) const;
  ::Message_MapPos* mutable_laser_margin_pos(int index);
  ::Message_MapPos* add_laser_margin_pos();
  ::google::protobuf::RepeatedPtrField< ::Message_MapPos >*
      mutable_laser_margin_pos();
  const ::google::protobuf::RepeatedPtrField< ::Message_MapPos >&
      laser_margin_pos() const;

  // uint32 id = 1;
  void clear_id();
  static const int kIdFieldNumber = 1;
  ::google::protobuf::uint32 id() const;
  void set_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:Message_LaserDevice)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::Message_MapPos > laser_margin_pos_;
  ::google::protobuf::uint32 id_;
  mutable int _cached_size_;
  friend struct ::protobuf_map_2eproto::TableStruct;
  friend void ::protobuf_map_2eproto::InitDefaultsMessage_LaserDeviceImpl();
};
// -------------------------------------------------------------------

class Message_Device : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Message_Device) */ {
 public:
  Message_Device();
  virtual ~Message_Device();

  Message_Device(const Message_Device& from);

  inline Message_Device& operator=(const Message_Device& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Message_Device(Message_Device&& from) noexcept
    : Message_Device() {
    *this = ::std::move(from);
  }

  inline Message_Device& operator=(Message_Device&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Message_Device& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Message_Device* internal_default_instance() {
    return reinterpret_cast<const Message_Device*>(
               &_Message_Device_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    10;

  void Swap(Message_Device* other);
  friend void swap(Message_Device& a, Message_Device& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Message_Device* New() const PROTOBUF_FINAL { return New(NULL); }

  Message_Device* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Message_Device& from);
  void MergeFrom(const Message_Device& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Message_Device* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .Message_LaserDevice laser_devices = 5;
  int laser_devices_size() const;
  void clear_laser_devices();
  static const int kLaserDevicesFieldNumber = 5;
  const ::Message_LaserDevice& laser_devices(int index) const;
  ::Message_LaserDevice* mutable_laser_devices(int index);
  ::Message_LaserDevice* add_laser_devices();
  ::google::protobuf::RepeatedPtrField< ::Message_LaserDevice >*
      mutable_laser_devices();
  const ::google::protobuf::RepeatedPtrField< ::Message_LaserDevice >&
      laser_devices() const;

  // repeated double ultrasonic_dist = 6;
  int ultrasonic_dist_size() const;
  void clear_ultrasonic_dist();
  static const int kUltrasonicDistFieldNumber = 6;
  double ultrasonic_dist(int index) const;
  void set_ultrasonic_dist(int index, double value);
  void add_ultrasonic_dist(double value);
  const ::google::protobuf::RepeatedField< double >&
      ultrasonic_dist() const;
  ::google::protobuf::RepeatedField< double >*
      mutable_ultrasonic_dist();

  // repeated double fallingdown_dist = 7;
  int fallingdown_dist_size() const;
  void clear_fallingdown_dist();
  static const int kFallingdownDistFieldNumber = 7;
  double fallingdown_dist(int index) const;
  void set_fallingdown_dist(int index, double value);
  void add_fallingdown_dist(double value);
  const ::google::protobuf::RepeatedField< double >&
      fallingdown_dist() const;
  ::google::protobuf::RepeatedField< double >*
      mutable_fallingdown_dist();

  // string model_name = 1;
  void clear_model_name();
  static const int kModelNameFieldNumber = 1;
  const ::std::string& model_name() const;
  void set_model_name(const ::std::string& value);
  #if LANG_CXX11
  void set_model_name(::std::string&& value);
  #endif
  void set_model_name(const char* value);
  void set_model_name(const char* value, size_t size);
  ::std::string* mutable_model_name();
  ::std::string* release_model_name();
  void set_allocated_model_name(::std::string* model_name);

  // @@protoc_insertion_point(class_scope:Message_Device)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::Message_LaserDevice > laser_devices_;
  ::google::protobuf::RepeatedField< double > ultrasonic_dist_;
  mutable int _ultrasonic_dist_cached_byte_size_;
  ::google::protobuf::RepeatedField< double > fallingdown_dist_;
  mutable int _fallingdown_dist_cached_byte_size_;
  ::google::protobuf::internal::ArenaStringPtr model_name_;
  mutable int _cached_size_;
  friend struct ::protobuf_map_2eproto::TableStruct;
  friend void ::protobuf_map_2eproto::InitDefaultsMessage_DeviceImpl();
};
// -------------------------------------------------------------------

class Message_PatrolRouteStation : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Message_PatrolRouteStation) */ {
 public:
  Message_PatrolRouteStation();
  virtual ~Message_PatrolRouteStation();

  Message_PatrolRouteStation(const Message_PatrolRouteStation& from);

  inline Message_PatrolRouteStation& operator=(const Message_PatrolRouteStation& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Message_PatrolRouteStation(Message_PatrolRouteStation&& from) noexcept
    : Message_PatrolRouteStation() {
    *this = ::std::move(from);
  }

  inline Message_PatrolRouteStation& operator=(Message_PatrolRouteStation&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Message_PatrolRouteStation& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Message_PatrolRouteStation* internal_default_instance() {
    return reinterpret_cast<const Message_PatrolRouteStation*>(
               &_Message_PatrolRouteStation_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    11;

  void Swap(Message_PatrolRouteStation* other);
  friend void swap(Message_PatrolRouteStation& a, Message_PatrolRouteStation& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Message_PatrolRouteStation* New() const PROTOBUF_FINAL { return New(NULL); }

  Message_PatrolRouteStation* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Message_PatrolRouteStation& from);
  void MergeFrom(const Message_PatrolRouteStation& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Message_PatrolRouteStation* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string id = 1;
  void clear_id();
  static const int kIdFieldNumber = 1;
  const ::std::string& id() const;
  void set_id(const ::std::string& value);
  #if LANG_CXX11
  void set_id(::std::string&& value);
  #endif
  void set_id(const char* value);
  void set_id(const char* value, size_t size);
  ::std::string* mutable_id();
  ::std::string* release_id();
  void set_allocated_id(::std::string* id);

  // @@protoc_insertion_point(class_scope:Message_PatrolRouteStation)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr id_;
  mutable int _cached_size_;
  friend struct ::protobuf_map_2eproto::TableStruct;
  friend void ::protobuf_map_2eproto::InitDefaultsMessage_PatrolRouteStationImpl();
};
// -------------------------------------------------------------------

class Message_PatrolRoute : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Message_PatrolRoute) */ {
 public:
  Message_PatrolRoute();
  virtual ~Message_PatrolRoute();

  Message_PatrolRoute(const Message_PatrolRoute& from);

  inline Message_PatrolRoute& operator=(const Message_PatrolRoute& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Message_PatrolRoute(Message_PatrolRoute&& from) noexcept
    : Message_PatrolRoute() {
    *this = ::std::move(from);
  }

  inline Message_PatrolRoute& operator=(Message_PatrolRoute&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Message_PatrolRoute& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Message_PatrolRoute* internal_default_instance() {
    return reinterpret_cast<const Message_PatrolRoute*>(
               &_Message_PatrolRoute_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    12;

  void Swap(Message_PatrolRoute* other);
  friend void swap(Message_PatrolRoute& a, Message_PatrolRoute& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Message_PatrolRoute* New() const PROTOBUF_FINAL { return New(NULL); }

  Message_PatrolRoute* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Message_PatrolRoute& from);
  void MergeFrom(const Message_PatrolRoute& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Message_PatrolRoute* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .Message_PatrolRouteStation station_list = 2;
  int station_list_size() const;
  void clear_station_list();
  static const int kStationListFieldNumber = 2;
  const ::Message_PatrolRouteStation& station_list(int index) const;
  ::Message_PatrolRouteStation* mutable_station_list(int index);
  ::Message_PatrolRouteStation* add_station_list();
  ::google::protobuf::RepeatedPtrField< ::Message_PatrolRouteStation >*
      mutable_station_list();
  const ::google::protobuf::RepeatedPtrField< ::Message_PatrolRouteStation >&
      station_list() const;

  // string name = 1;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // .google.protobuf.DoubleValue max_speed = 4;
  bool has_max_speed() const;
  void clear_max_speed();
  static const int kMaxSpeedFieldNumber = 4;
  const ::google::protobuf::DoubleValue& max_speed() const;
  ::google::protobuf::DoubleValue* release_max_speed();
  ::google::protobuf::DoubleValue* mutable_max_speed();
  void set_allocated_max_speed(::google::protobuf::DoubleValue* max_speed);

  // .google.protobuf.DoubleValue max_acc = 5;
  bool has_max_acc() const;
  void clear_max_acc();
  static const int kMaxAccFieldNumber = 5;
  const ::google::protobuf::DoubleValue& max_acc() const;
  ::google::protobuf::DoubleValue* release_max_acc();
  ::google::protobuf::DoubleValue* mutable_max_acc();
  void set_allocated_max_acc(::google::protobuf::DoubleValue* max_acc);

  // .google.protobuf.DoubleValue max_rot = 6;
  bool has_max_rot() const;
  void clear_max_rot();
  static const int kMaxRotFieldNumber = 6;
  const ::google::protobuf::DoubleValue& max_rot() const;
  ::google::protobuf::DoubleValue* release_max_rot();
  ::google::protobuf::DoubleValue* mutable_max_rot();
  void set_allocated_max_rot(::google::protobuf::DoubleValue* max_rot);

  // .google.protobuf.DoubleValue max_rot_acc = 7;
  bool has_max_rot_acc() const;
  void clear_max_rot_acc();
  static const int kMaxRotAccFieldNumber = 7;
  const ::google::protobuf::DoubleValue& max_rot_acc() const;
  ::google::protobuf::DoubleValue* release_max_rot_acc();
  ::google::protobuf::DoubleValue* mutable_max_rot_acc();
  void set_allocated_max_rot_acc(::google::protobuf::DoubleValue* max_rot_acc);

  // @@protoc_insertion_point(class_scope:Message_PatrolRoute)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::Message_PatrolRouteStation > station_list_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::DoubleValue* max_speed_;
  ::google::protobuf::DoubleValue* max_acc_;
  ::google::protobuf::DoubleValue* max_rot_;
  ::google::protobuf::DoubleValue* max_rot_acc_;
  mutable int _cached_size_;
  friend struct ::protobuf_map_2eproto::TableStruct;
  friend void ::protobuf_map_2eproto::InitDefaultsMessage_PatrolRouteImpl();
};
// -------------------------------------------------------------------

class Message_Map : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Message_Map) */ {
 public:
  Message_Map();
  virtual ~Message_Map();

  Message_Map(const Message_Map& from);

  inline Message_Map& operator=(const Message_Map& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Message_Map(Message_Map&& from) noexcept
    : Message_Map() {
    *this = ::std::move(from);
  }

  inline Message_Map& operator=(Message_Map&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Message_Map& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Message_Map* internal_default_instance() {
    return reinterpret_cast<const Message_Map*>(
               &_Message_Map_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    13;

  void Swap(Message_Map* other);
  friend void swap(Message_Map& a, Message_Map& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Message_Map* New() const PROTOBUF_FINAL { return New(NULL); }

  Message_Map* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Message_Map& from);
  void MergeFrom(const Message_Map& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Message_Map* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .Message_MapPos normal_pos_list = 3;
  int normal_pos_list_size() const;
  void clear_normal_pos_list();
  static const int kNormalPosListFieldNumber = 3;
  const ::Message_MapPos& normal_pos_list(int index) const;
  ::Message_MapPos* mutable_normal_pos_list(int index);
  ::Message_MapPos* add_normal_pos_list();
  ::google::protobuf::RepeatedPtrField< ::Message_MapPos >*
      mutable_normal_pos_list();
  const ::google::protobuf::RepeatedPtrField< ::Message_MapPos >&
      normal_pos_list() const;

  // repeated .Message_MapLine normal_line_list = 4;
  int normal_line_list_size() const;
  void clear_normal_line_list();
  static const int kNormalLineListFieldNumber = 4;
  const ::Message_MapLine& normal_line_list(int index) const;
  ::Message_MapLine* mutable_normal_line_list(int index);
  ::Message_MapLine* add_normal_line_list();
  ::google::protobuf::RepeatedPtrField< ::Message_MapLine >*
      mutable_normal_line_list();
  const ::google::protobuf::RepeatedPtrField< ::Message_MapLine >&
      normal_line_list() const;

  // repeated .Message_AdvancedPoint advanced_point_list = 6;
  int advanced_point_list_size() const;
  void clear_advanced_point_list();
  static const int kAdvancedPointListFieldNumber = 6;
  const ::Message_AdvancedPoint& advanced_point_list(int index) const;
  ::Message_AdvancedPoint* mutable_advanced_point_list(int index);
  ::Message_AdvancedPoint* add_advanced_point_list();
  ::google::protobuf::RepeatedPtrField< ::Message_AdvancedPoint >*
      mutable_advanced_point_list();
  const ::google::protobuf::RepeatedPtrField< ::Message_AdvancedPoint >&
      advanced_point_list() const;

  // repeated .Message_AdvancedLine advanced_line_list = 7;
  int advanced_line_list_size() const;
  void clear_advanced_line_list();
  static const int kAdvancedLineListFieldNumber = 7;
  const ::Message_AdvancedLine& advanced_line_list(int index) const;
  ::Message_AdvancedLine* mutable_advanced_line_list(int index);
  ::Message_AdvancedLine* add_advanced_line_list();
  ::google::protobuf::RepeatedPtrField< ::Message_AdvancedLine >*
      mutable_advanced_line_list();
  const ::google::protobuf::RepeatedPtrField< ::Message_AdvancedLine >&
      advanced_line_list() const;

  // repeated .Message_AdvancedCurve advanced_curve_list = 8;
  int advanced_curve_list_size() const;
  void clear_advanced_curve_list();
  static const int kAdvancedCurveListFieldNumber = 8;
  const ::Message_AdvancedCurve& advanced_curve_list(int index) const;
  ::Message_AdvancedCurve* mutable_advanced_curve_list(int index);
  ::Message_AdvancedCurve* add_advanced_curve_list();
  ::google::protobuf::RepeatedPtrField< ::Message_AdvancedCurve >*
      mutable_advanced_curve_list();
  const ::google::protobuf::RepeatedPtrField< ::Message_AdvancedCurve >&
      advanced_curve_list() const;

  // repeated .Message_AdvancedArea advanced_area_list = 9;
  int advanced_area_list_size() const;
  void clear_advanced_area_list();
  static const int kAdvancedAreaListFieldNumber = 9;
  const ::Message_AdvancedArea& advanced_area_list(int index) const;
  ::Message_AdvancedArea* mutable_advanced_area_list(int index);
  ::Message_AdvancedArea* add_advanced_area_list();
  ::google::protobuf::RepeatedPtrField< ::Message_AdvancedArea >*
      mutable_advanced_area_list();
  const ::google::protobuf::RepeatedPtrField< ::Message_AdvancedArea >&
      advanced_area_list() const;

  // repeated .Message_PatrolRoute patrol_route_list = 10;
  int patrol_route_list_size() const;
  void clear_patrol_route_list();
  static const int kPatrolRouteListFieldNumber = 10;
  const ::Message_PatrolRoute& patrol_route_list(int index) const;
  ::Message_PatrolRoute* mutable_patrol_route_list(int index);
  ::Message_PatrolRoute* add_patrol_route_list();
  ::google::protobuf::RepeatedPtrField< ::Message_PatrolRoute >*
      mutable_patrol_route_list();
  const ::google::protobuf::RepeatedPtrField< ::Message_PatrolRoute >&
      patrol_route_list() const;

  // string map_directory = 1;
  void clear_map_directory();
  static const int kMapDirectoryFieldNumber = 1;
  const ::std::string& map_directory() const;
  void set_map_directory(const ::std::string& value);
  #if LANG_CXX11
  void set_map_directory(::std::string&& value);
  #endif
  void set_map_directory(const char* value);
  void set_map_directory(const char* value, size_t size);
  ::std::string* mutable_map_directory();
  ::std::string* release_map_directory();
  void set_allocated_map_directory(::std::string* map_directory);

  // .Message_MapHeader header = 2;
  bool has_header() const;
  void clear_header();
  static const int kHeaderFieldNumber = 2;
  const ::Message_MapHeader& header() const;
  ::Message_MapHeader* release_header();
  ::Message_MapHeader* mutable_header();
  void set_allocated_header(::Message_MapHeader* header);

  // @@protoc_insertion_point(class_scope:Message_Map)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::Message_MapPos > normal_pos_list_;
  ::google::protobuf::RepeatedPtrField< ::Message_MapLine > normal_line_list_;
  ::google::protobuf::RepeatedPtrField< ::Message_AdvancedPoint > advanced_point_list_;
  ::google::protobuf::RepeatedPtrField< ::Message_AdvancedLine > advanced_line_list_;
  ::google::protobuf::RepeatedPtrField< ::Message_AdvancedCurve > advanced_curve_list_;
  ::google::protobuf::RepeatedPtrField< ::Message_AdvancedArea > advanced_area_list_;
  ::google::protobuf::RepeatedPtrField< ::Message_PatrolRoute > patrol_route_list_;
  ::google::protobuf::internal::ArenaStringPtr map_directory_;
  ::Message_MapHeader* header_;
  mutable int _cached_size_;
  friend struct ::protobuf_map_2eproto::TableStruct;
  friend void ::protobuf_map_2eproto::InitDefaultsMessage_MapImpl();
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// Message_MapProperty

// string key = 1;
inline void Message_MapProperty::clear_key() {
  key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Message_MapProperty::key() const {
  // @@protoc_insertion_point(field_get:Message_MapProperty.key)
  return key_.GetNoArena();
}
inline void Message_MapProperty::set_key(const ::std::string& value) {
  
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Message_MapProperty.key)
}
#if LANG_CXX11
inline void Message_MapProperty::set_key(::std::string&& value) {
  
  key_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Message_MapProperty.key)
}
#endif
inline void Message_MapProperty::set_key(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Message_MapProperty.key)
}
inline void Message_MapProperty::set_key(const char* value, size_t size) {
  
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Message_MapProperty.key)
}
inline ::std::string* Message_MapProperty::mutable_key() {
  
  // @@protoc_insertion_point(field_mutable:Message_MapProperty.key)
  return key_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Message_MapProperty::release_key() {
  // @@protoc_insertion_point(field_release:Message_MapProperty.key)
  
  return key_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Message_MapProperty::set_allocated_key(::std::string* key) {
  if (key != NULL) {
    
  } else {
    
  }
  key_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), key);
  // @@protoc_insertion_point(field_set_allocated:Message_MapProperty.key)
}

// string type = 2;
inline void Message_MapProperty::clear_type() {
  type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Message_MapProperty::type() const {
  // @@protoc_insertion_point(field_get:Message_MapProperty.type)
  return type_.GetNoArena();
}
inline void Message_MapProperty::set_type(const ::std::string& value) {
  
  type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Message_MapProperty.type)
}
#if LANG_CXX11
inline void Message_MapProperty::set_type(::std::string&& value) {
  
  type_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Message_MapProperty.type)
}
#endif
inline void Message_MapProperty::set_type(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Message_MapProperty.type)
}
inline void Message_MapProperty::set_type(const char* value, size_t size) {
  
  type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Message_MapProperty.type)
}
inline ::std::string* Message_MapProperty::mutable_type() {
  
  // @@protoc_insertion_point(field_mutable:Message_MapProperty.type)
  return type_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Message_MapProperty::release_type() {
  // @@protoc_insertion_point(field_release:Message_MapProperty.type)
  
  return type_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Message_MapProperty::set_allocated_type(::std::string* type) {
  if (type != NULL) {
    
  } else {
    
  }
  type_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), type);
  // @@protoc_insertion_point(field_set_allocated:Message_MapProperty.type)
}

// bytes value = 3;
inline void Message_MapProperty::clear_value() {
  value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Message_MapProperty::value() const {
  // @@protoc_insertion_point(field_get:Message_MapProperty.value)
  return value_.GetNoArena();
}
inline void Message_MapProperty::set_value(const ::std::string& value) {
  
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Message_MapProperty.value)
}
#if LANG_CXX11
inline void Message_MapProperty::set_value(::std::string&& value) {
  
  value_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Message_MapProperty.value)
}
#endif
inline void Message_MapProperty::set_value(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Message_MapProperty.value)
}
inline void Message_MapProperty::set_value(const void* value, size_t size) {
  
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Message_MapProperty.value)
}
inline ::std::string* Message_MapProperty::mutable_value() {
  
  // @@protoc_insertion_point(field_mutable:Message_MapProperty.value)
  return value_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Message_MapProperty::release_value() {
  // @@protoc_insertion_point(field_release:Message_MapProperty.value)
  
  return value_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Message_MapProperty::set_allocated_value(::std::string* value) {
  if (value != NULL) {
    
  } else {
    
  }
  value_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set_allocated:Message_MapProperty.value)
}

// string string_value = 4;
inline bool Message_MapProperty::has_string_value() const {
  return oneof_value_case() == kStringValue;
}
inline void Message_MapProperty::set_has_string_value() {
  _oneof_case_[0] = kStringValue;
}
inline void Message_MapProperty::clear_string_value() {
  if (has_string_value()) {
    oneof_value_.string_value_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    clear_has_oneof_value();
  }
}
inline const ::std::string& Message_MapProperty::string_value() const {
  // @@protoc_insertion_point(field_get:Message_MapProperty.string_value)
  if (has_string_value()) {
    return oneof_value_.string_value_.GetNoArena();
  }
  return *&::google::protobuf::internal::GetEmptyStringAlreadyInited();
}
inline void Message_MapProperty::set_string_value(const ::std::string& value) {
  // @@protoc_insertion_point(field_set:Message_MapProperty.string_value)
  if (!has_string_value()) {
    clear_oneof_value();
    set_has_string_value();
    oneof_value_.string_value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  oneof_value_.string_value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Message_MapProperty.string_value)
}
#if LANG_CXX11
inline void Message_MapProperty::set_string_value(::std::string&& value) {
  // @@protoc_insertion_point(field_set:Message_MapProperty.string_value)
  if (!has_string_value()) {
    clear_oneof_value();
    set_has_string_value();
    oneof_value_.string_value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  oneof_value_.string_value_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Message_MapProperty.string_value)
}
#endif
inline void Message_MapProperty::set_string_value(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  if (!has_string_value()) {
    clear_oneof_value();
    set_has_string_value();
    oneof_value_.string_value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  oneof_value_.string_value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Message_MapProperty.string_value)
}
inline void Message_MapProperty::set_string_value(const char* value, size_t size) {
  if (!has_string_value()) {
    clear_oneof_value();
    set_has_string_value();
    oneof_value_.string_value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  oneof_value_.string_value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Message_MapProperty.string_value)
}
inline ::std::string* Message_MapProperty::mutable_string_value() {
  if (!has_string_value()) {
    clear_oneof_value();
    set_has_string_value();
    oneof_value_.string_value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_mutable:Message_MapProperty.string_value)
  return oneof_value_.string_value_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Message_MapProperty::release_string_value() {
  // @@protoc_insertion_point(field_release:Message_MapProperty.string_value)
  if (has_string_value()) {
    clear_has_oneof_value();
    return oneof_value_.string_value_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  } else {
    return NULL;
  }
}
inline void Message_MapProperty::set_allocated_string_value(::std::string* string_value) {
  if (!has_string_value()) {
    oneof_value_.string_value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  clear_oneof_value();
  if (string_value != NULL) {
    set_has_string_value();
    oneof_value_.string_value_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
        string_value);
  }
  // @@protoc_insertion_point(field_set_allocated:Message_MapProperty.string_value)
}

// bool bool_value = 5;
inline bool Message_MapProperty::has_bool_value() const {
  return oneof_value_case() == kBoolValue;
}
inline void Message_MapProperty::set_has_bool_value() {
  _oneof_case_[0] = kBoolValue;
}
inline void Message_MapProperty::clear_bool_value() {
  if (has_bool_value()) {
    oneof_value_.bool_value_ = false;
    clear_has_oneof_value();
  }
}
inline bool Message_MapProperty::bool_value() const {
  // @@protoc_insertion_point(field_get:Message_MapProperty.bool_value)
  if (has_bool_value()) {
    return oneof_value_.bool_value_;
  }
  return false;
}
inline void Message_MapProperty::set_bool_value(bool value) {
  if (!has_bool_value()) {
    clear_oneof_value();
    set_has_bool_value();
  }
  oneof_value_.bool_value_ = value;
  // @@protoc_insertion_point(field_set:Message_MapProperty.bool_value)
}

// int32 int32_value = 6;
inline bool Message_MapProperty::has_int32_value() const {
  return oneof_value_case() == kInt32Value;
}
inline void Message_MapProperty::set_has_int32_value() {
  _oneof_case_[0] = kInt32Value;
}
inline void Message_MapProperty::clear_int32_value() {
  if (has_int32_value()) {
    oneof_value_.int32_value_ = 0;
    clear_has_oneof_value();
  }
}
inline ::google::protobuf::int32 Message_MapProperty::int32_value() const {
  // @@protoc_insertion_point(field_get:Message_MapProperty.int32_value)
  if (has_int32_value()) {
    return oneof_value_.int32_value_;
  }
  return 0;
}
inline void Message_MapProperty::set_int32_value(::google::protobuf::int32 value) {
  if (!has_int32_value()) {
    clear_oneof_value();
    set_has_int32_value();
  }
  oneof_value_.int32_value_ = value;
  // @@protoc_insertion_point(field_set:Message_MapProperty.int32_value)
}

// uint32 uint32_value = 7;
inline bool Message_MapProperty::has_uint32_value() const {
  return oneof_value_case() == kUint32Value;
}
inline void Message_MapProperty::set_has_uint32_value() {
  _oneof_case_[0] = kUint32Value;
}
inline void Message_MapProperty::clear_uint32_value() {
  if (has_uint32_value()) {
    oneof_value_.uint32_value_ = 0u;
    clear_has_oneof_value();
  }
}
inline ::google::protobuf::uint32 Message_MapProperty::uint32_value() const {
  // @@protoc_insertion_point(field_get:Message_MapProperty.uint32_value)
  if (has_uint32_value()) {
    return oneof_value_.uint32_value_;
  }
  return 0u;
}
inline void Message_MapProperty::set_uint32_value(::google::protobuf::uint32 value) {
  if (!has_uint32_value()) {
    clear_oneof_value();
    set_has_uint32_value();
  }
  oneof_value_.uint32_value_ = value;
  // @@protoc_insertion_point(field_set:Message_MapProperty.uint32_value)
}

// int64 int64_value = 8;
inline bool Message_MapProperty::has_int64_value() const {
  return oneof_value_case() == kInt64Value;
}
inline void Message_MapProperty::set_has_int64_value() {
  _oneof_case_[0] = kInt64Value;
}
inline void Message_MapProperty::clear_int64_value() {
  if (has_int64_value()) {
    oneof_value_.int64_value_ = GOOGLE_LONGLONG(0);
    clear_has_oneof_value();
  }
}
inline ::google::protobuf::int64 Message_MapProperty::int64_value() const {
  // @@protoc_insertion_point(field_get:Message_MapProperty.int64_value)
  if (has_int64_value()) {
    return oneof_value_.int64_value_;
  }
  return GOOGLE_LONGLONG(0);
}
inline void Message_MapProperty::set_int64_value(::google::protobuf::int64 value) {
  if (!has_int64_value()) {
    clear_oneof_value();
    set_has_int64_value();
  }
  oneof_value_.int64_value_ = value;
  // @@protoc_insertion_point(field_set:Message_MapProperty.int64_value)
}

// uint64 uint64_value = 9;
inline bool Message_MapProperty::has_uint64_value() const {
  return oneof_value_case() == kUint64Value;
}
inline void Message_MapProperty::set_has_uint64_value() {
  _oneof_case_[0] = kUint64Value;
}
inline void Message_MapProperty::clear_uint64_value() {
  if (has_uint64_value()) {
    oneof_value_.uint64_value_ = GOOGLE_ULONGLONG(0);
    clear_has_oneof_value();
  }
}
inline ::google::protobuf::uint64 Message_MapProperty::uint64_value() const {
  // @@protoc_insertion_point(field_get:Message_MapProperty.uint64_value)
  if (has_uint64_value()) {
    return oneof_value_.uint64_value_;
  }
  return GOOGLE_ULONGLONG(0);
}
inline void Message_MapProperty::set_uint64_value(::google::protobuf::uint64 value) {
  if (!has_uint64_value()) {
    clear_oneof_value();
    set_has_uint64_value();
  }
  oneof_value_.uint64_value_ = value;
  // @@protoc_insertion_point(field_set:Message_MapProperty.uint64_value)
}

// float float_value = 10;
inline bool Message_MapProperty::has_float_value() const {
  return oneof_value_case() == kFloatValue;
}
inline void Message_MapProperty::set_has_float_value() {
  _oneof_case_[0] = kFloatValue;
}
inline void Message_MapProperty::clear_float_value() {
  if (has_float_value()) {
    oneof_value_.float_value_ = 0;
    clear_has_oneof_value();
  }
}
inline float Message_MapProperty::float_value() const {
  // @@protoc_insertion_point(field_get:Message_MapProperty.float_value)
  if (has_float_value()) {
    return oneof_value_.float_value_;
  }
  return 0;
}
inline void Message_MapProperty::set_float_value(float value) {
  if (!has_float_value()) {
    clear_oneof_value();
    set_has_float_value();
  }
  oneof_value_.float_value_ = value;
  // @@protoc_insertion_point(field_set:Message_MapProperty.float_value)
}

// double double_value = 11;
inline bool Message_MapProperty::has_double_value() const {
  return oneof_value_case() == kDoubleValue;
}
inline void Message_MapProperty::set_has_double_value() {
  _oneof_case_[0] = kDoubleValue;
}
inline void Message_MapProperty::clear_double_value() {
  if (has_double_value()) {
    oneof_value_.double_value_ = 0;
    clear_has_oneof_value();
  }
}
inline double Message_MapProperty::double_value() const {
  // @@protoc_insertion_point(field_get:Message_MapProperty.double_value)
  if (has_double_value()) {
    return oneof_value_.double_value_;
  }
  return 0;
}
inline void Message_MapProperty::set_double_value(double value) {
  if (!has_double_value()) {
    clear_oneof_value();
    set_has_double_value();
  }
  oneof_value_.double_value_ = value;
  // @@protoc_insertion_point(field_set:Message_MapProperty.double_value)
}

// bytes bytes_value = 12;
inline bool Message_MapProperty::has_bytes_value() const {
  return oneof_value_case() == kBytesValue;
}
inline void Message_MapProperty::set_has_bytes_value() {
  _oneof_case_[0] = kBytesValue;
}
inline void Message_MapProperty::clear_bytes_value() {
  if (has_bytes_value()) {
    oneof_value_.bytes_value_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    clear_has_oneof_value();
  }
}
inline const ::std::string& Message_MapProperty::bytes_value() const {
  // @@protoc_insertion_point(field_get:Message_MapProperty.bytes_value)
  if (has_bytes_value()) {
    return oneof_value_.bytes_value_.GetNoArena();
  }
  return *&::google::protobuf::internal::GetEmptyStringAlreadyInited();
}
inline void Message_MapProperty::set_bytes_value(const ::std::string& value) {
  // @@protoc_insertion_point(field_set:Message_MapProperty.bytes_value)
  if (!has_bytes_value()) {
    clear_oneof_value();
    set_has_bytes_value();
    oneof_value_.bytes_value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  oneof_value_.bytes_value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Message_MapProperty.bytes_value)
}
#if LANG_CXX11
inline void Message_MapProperty::set_bytes_value(::std::string&& value) {
  // @@protoc_insertion_point(field_set:Message_MapProperty.bytes_value)
  if (!has_bytes_value()) {
    clear_oneof_value();
    set_has_bytes_value();
    oneof_value_.bytes_value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  oneof_value_.bytes_value_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Message_MapProperty.bytes_value)
}
#endif
inline void Message_MapProperty::set_bytes_value(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  if (!has_bytes_value()) {
    clear_oneof_value();
    set_has_bytes_value();
    oneof_value_.bytes_value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  oneof_value_.bytes_value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Message_MapProperty.bytes_value)
}
inline void Message_MapProperty::set_bytes_value(const void* value, size_t size) {
  if (!has_bytes_value()) {
    clear_oneof_value();
    set_has_bytes_value();
    oneof_value_.bytes_value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  oneof_value_.bytes_value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Message_MapProperty.bytes_value)
}
inline ::std::string* Message_MapProperty::mutable_bytes_value() {
  if (!has_bytes_value()) {
    clear_oneof_value();
    set_has_bytes_value();
    oneof_value_.bytes_value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_mutable:Message_MapProperty.bytes_value)
  return oneof_value_.bytes_value_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Message_MapProperty::release_bytes_value() {
  // @@protoc_insertion_point(field_release:Message_MapProperty.bytes_value)
  if (has_bytes_value()) {
    clear_has_oneof_value();
    return oneof_value_.bytes_value_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  } else {
    return NULL;
  }
}
inline void Message_MapProperty::set_allocated_bytes_value(::std::string* bytes_value) {
  if (!has_bytes_value()) {
    oneof_value_.bytes_value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  clear_oneof_value();
  if (bytes_value != NULL) {
    set_has_bytes_value();
    oneof_value_.bytes_value_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
        bytes_value);
  }
  // @@protoc_insertion_point(field_set_allocated:Message_MapProperty.bytes_value)
}

inline bool Message_MapProperty::has_oneof_value() const {
  return oneof_value_case() != ONEOF_VALUE_NOT_SET;
}
inline void Message_MapProperty::clear_has_oneof_value() {
  _oneof_case_[0] = ONEOF_VALUE_NOT_SET;
}
inline Message_MapProperty::OneofValueCase Message_MapProperty::oneof_value_case() const {
  return Message_MapProperty::OneofValueCase(_oneof_case_[0]);
}
// -------------------------------------------------------------------

// Message_MapPos

// double x = 1;
inline void Message_MapPos::clear_x() {
  x_ = 0;
}
inline double Message_MapPos::x() const {
  // @@protoc_insertion_point(field_get:Message_MapPos.x)
  return x_;
}
inline void Message_MapPos::set_x(double value) {
  
  x_ = value;
  // @@protoc_insertion_point(field_set:Message_MapPos.x)
}

// double y = 2;
inline void Message_MapPos::clear_y() {
  y_ = 0;
}
inline double Message_MapPos::y() const {
  // @@protoc_insertion_point(field_get:Message_MapPos.y)
  return y_;
}
inline void Message_MapPos::set_y(double value) {
  
  y_ = value;
  // @@protoc_insertion_point(field_set:Message_MapPos.y)
}

// -------------------------------------------------------------------

// Message_MapLine

// .Message_MapPos start_pos = 1;
inline bool Message_MapLine::has_start_pos() const {
  return this != internal_default_instance() && start_pos_ != NULL;
}
inline void Message_MapLine::clear_start_pos() {
  if (GetArenaNoVirtual() == NULL && start_pos_ != NULL) {
    delete start_pos_;
  }
  start_pos_ = NULL;
}
inline const ::Message_MapPos& Message_MapLine::start_pos() const {
  const ::Message_MapPos* p = start_pos_;
  // @@protoc_insertion_point(field_get:Message_MapLine.start_pos)
  return p != NULL ? *p : *reinterpret_cast<const ::Message_MapPos*>(
      &::_Message_MapPos_default_instance_);
}
inline ::Message_MapPos* Message_MapLine::release_start_pos() {
  // @@protoc_insertion_point(field_release:Message_MapLine.start_pos)
  
  ::Message_MapPos* temp = start_pos_;
  start_pos_ = NULL;
  return temp;
}
inline ::Message_MapPos* Message_MapLine::mutable_start_pos() {
  
  if (start_pos_ == NULL) {
    start_pos_ = new ::Message_MapPos;
  }
  // @@protoc_insertion_point(field_mutable:Message_MapLine.start_pos)
  return start_pos_;
}
inline void Message_MapLine::set_allocated_start_pos(::Message_MapPos* start_pos) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete start_pos_;
  }
  if (start_pos) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      start_pos = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, start_pos, submessage_arena);
    }
    
  } else {
    
  }
  start_pos_ = start_pos;
  // @@protoc_insertion_point(field_set_allocated:Message_MapLine.start_pos)
}

// .Message_MapPos end_pos = 2;
inline bool Message_MapLine::has_end_pos() const {
  return this != internal_default_instance() && end_pos_ != NULL;
}
inline void Message_MapLine::clear_end_pos() {
  if (GetArenaNoVirtual() == NULL && end_pos_ != NULL) {
    delete end_pos_;
  }
  end_pos_ = NULL;
}
inline const ::Message_MapPos& Message_MapLine::end_pos() const {
  const ::Message_MapPos* p = end_pos_;
  // @@protoc_insertion_point(field_get:Message_MapLine.end_pos)
  return p != NULL ? *p : *reinterpret_cast<const ::Message_MapPos*>(
      &::_Message_MapPos_default_instance_);
}
inline ::Message_MapPos* Message_MapLine::release_end_pos() {
  // @@protoc_insertion_point(field_release:Message_MapLine.end_pos)
  
  ::Message_MapPos* temp = end_pos_;
  end_pos_ = NULL;
  return temp;
}
inline ::Message_MapPos* Message_MapLine::mutable_end_pos() {
  
  if (end_pos_ == NULL) {
    end_pos_ = new ::Message_MapPos;
  }
  // @@protoc_insertion_point(field_mutable:Message_MapLine.end_pos)
  return end_pos_;
}
inline void Message_MapLine::set_allocated_end_pos(::Message_MapPos* end_pos) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete end_pos_;
  }
  if (end_pos) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      end_pos = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, end_pos, submessage_arena);
    }
    
  } else {
    
  }
  end_pos_ = end_pos;
  // @@protoc_insertion_point(field_set_allocated:Message_MapLine.end_pos)
}

// -------------------------------------------------------------------

// Message_MapHeader

// string map_type = 1;
inline void Message_MapHeader::clear_map_type() {
  map_type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Message_MapHeader::map_type() const {
  // @@protoc_insertion_point(field_get:Message_MapHeader.map_type)
  return map_type_.GetNoArena();
}
inline void Message_MapHeader::set_map_type(const ::std::string& value) {
  
  map_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Message_MapHeader.map_type)
}
#if LANG_CXX11
inline void Message_MapHeader::set_map_type(::std::string&& value) {
  
  map_type_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Message_MapHeader.map_type)
}
#endif
inline void Message_MapHeader::set_map_type(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  map_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Message_MapHeader.map_type)
}
inline void Message_MapHeader::set_map_type(const char* value, size_t size) {
  
  map_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Message_MapHeader.map_type)
}
inline ::std::string* Message_MapHeader::mutable_map_type() {
  
  // @@protoc_insertion_point(field_mutable:Message_MapHeader.map_type)
  return map_type_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Message_MapHeader::release_map_type() {
  // @@protoc_insertion_point(field_release:Message_MapHeader.map_type)
  
  return map_type_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Message_MapHeader::set_allocated_map_type(::std::string* map_type) {
  if (map_type != NULL) {
    
  } else {
    
  }
  map_type_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), map_type);
  // @@protoc_insertion_point(field_set_allocated:Message_MapHeader.map_type)
}

// string map_name = 2;
inline void Message_MapHeader::clear_map_name() {
  map_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Message_MapHeader::map_name() const {
  // @@protoc_insertion_point(field_get:Message_MapHeader.map_name)
  return map_name_.GetNoArena();
}
inline void Message_MapHeader::set_map_name(const ::std::string& value) {
  
  map_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Message_MapHeader.map_name)
}
#if LANG_CXX11
inline void Message_MapHeader::set_map_name(::std::string&& value) {
  
  map_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Message_MapHeader.map_name)
}
#endif
inline void Message_MapHeader::set_map_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  map_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Message_MapHeader.map_name)
}
inline void Message_MapHeader::set_map_name(const char* value, size_t size) {
  
  map_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Message_MapHeader.map_name)
}
inline ::std::string* Message_MapHeader::mutable_map_name() {
  
  // @@protoc_insertion_point(field_mutable:Message_MapHeader.map_name)
  return map_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Message_MapHeader::release_map_name() {
  // @@protoc_insertion_point(field_release:Message_MapHeader.map_name)
  
  return map_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Message_MapHeader::set_allocated_map_name(::std::string* map_name) {
  if (map_name != NULL) {
    
  } else {
    
  }
  map_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), map_name);
  // @@protoc_insertion_point(field_set_allocated:Message_MapHeader.map_name)
}

// .Message_MapPos min_pos = 3;
inline bool Message_MapHeader::has_min_pos() const {
  return this != internal_default_instance() && min_pos_ != NULL;
}
inline void Message_MapHeader::clear_min_pos() {
  if (GetArenaNoVirtual() == NULL && min_pos_ != NULL) {
    delete min_pos_;
  }
  min_pos_ = NULL;
}
inline const ::Message_MapPos& Message_MapHeader::min_pos() const {
  const ::Message_MapPos* p = min_pos_;
  // @@protoc_insertion_point(field_get:Message_MapHeader.min_pos)
  return p != NULL ? *p : *reinterpret_cast<const ::Message_MapPos*>(
      &::_Message_MapPos_default_instance_);
}
inline ::Message_MapPos* Message_MapHeader::release_min_pos() {
  // @@protoc_insertion_point(field_release:Message_MapHeader.min_pos)
  
  ::Message_MapPos* temp = min_pos_;
  min_pos_ = NULL;
  return temp;
}
inline ::Message_MapPos* Message_MapHeader::mutable_min_pos() {
  
  if (min_pos_ == NULL) {
    min_pos_ = new ::Message_MapPos;
  }
  // @@protoc_insertion_point(field_mutable:Message_MapHeader.min_pos)
  return min_pos_;
}
inline void Message_MapHeader::set_allocated_min_pos(::Message_MapPos* min_pos) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete min_pos_;
  }
  if (min_pos) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      min_pos = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, min_pos, submessage_arena);
    }
    
  } else {
    
  }
  min_pos_ = min_pos;
  // @@protoc_insertion_point(field_set_allocated:Message_MapHeader.min_pos)
}

// .Message_MapPos max_pos = 4;
inline bool Message_MapHeader::has_max_pos() const {
  return this != internal_default_instance() && max_pos_ != NULL;
}
inline void Message_MapHeader::clear_max_pos() {
  if (GetArenaNoVirtual() == NULL && max_pos_ != NULL) {
    delete max_pos_;
  }
  max_pos_ = NULL;
}
inline const ::Message_MapPos& Message_MapHeader::max_pos() const {
  const ::Message_MapPos* p = max_pos_;
  // @@protoc_insertion_point(field_get:Message_MapHeader.max_pos)
  return p != NULL ? *p : *reinterpret_cast<const ::Message_MapPos*>(
      &::_Message_MapPos_default_instance_);
}
inline ::Message_MapPos* Message_MapHeader::release_max_pos() {
  // @@protoc_insertion_point(field_release:Message_MapHeader.max_pos)
  
  ::Message_MapPos* temp = max_pos_;
  max_pos_ = NULL;
  return temp;
}
inline ::Message_MapPos* Message_MapHeader::mutable_max_pos() {
  
  if (max_pos_ == NULL) {
    max_pos_ = new ::Message_MapPos;
  }
  // @@protoc_insertion_point(field_mutable:Message_MapHeader.max_pos)
  return max_pos_;
}
inline void Message_MapHeader::set_allocated_max_pos(::Message_MapPos* max_pos) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete max_pos_;
  }
  if (max_pos) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      max_pos = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, max_pos, submessage_arena);
    }
    
  } else {
    
  }
  max_pos_ = max_pos;
  // @@protoc_insertion_point(field_set_allocated:Message_MapHeader.max_pos)
}

// double resolution = 5;
inline void Message_MapHeader::clear_resolution() {
  resolution_ = 0;
}
inline double Message_MapHeader::resolution() const {
  // @@protoc_insertion_point(field_get:Message_MapHeader.resolution)
  return resolution_;
}
inline void Message_MapHeader::set_resolution(double value) {
  
  resolution_ = value;
  // @@protoc_insertion_point(field_set:Message_MapHeader.resolution)
}

// string version = 8;
inline void Message_MapHeader::clear_version() {
  version_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Message_MapHeader::version() const {
  // @@protoc_insertion_point(field_get:Message_MapHeader.version)
  return version_.GetNoArena();
}
inline void Message_MapHeader::set_version(const ::std::string& value) {
  
  version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Message_MapHeader.version)
}
#if LANG_CXX11
inline void Message_MapHeader::set_version(::std::string&& value) {
  
  version_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Message_MapHeader.version)
}
#endif
inline void Message_MapHeader::set_version(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Message_MapHeader.version)
}
inline void Message_MapHeader::set_version(const char* value, size_t size) {
  
  version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Message_MapHeader.version)
}
inline ::std::string* Message_MapHeader::mutable_version() {
  
  // @@protoc_insertion_point(field_mutable:Message_MapHeader.version)
  return version_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Message_MapHeader::release_version() {
  // @@protoc_insertion_point(field_release:Message_MapHeader.version)
  
  return version_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Message_MapHeader::set_allocated_version(::std::string* version) {
  if (version != NULL) {
    
  } else {
    
  }
  version_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), version);
  // @@protoc_insertion_point(field_set_allocated:Message_MapHeader.version)
}

// -------------------------------------------------------------------

// Message_MapAttribute

// string description = 1;
inline void Message_MapAttribute::clear_description() {
  description_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Message_MapAttribute::description() const {
  // @@protoc_insertion_point(field_get:Message_MapAttribute.description)
  return description_.GetNoArena();
}
inline void Message_MapAttribute::set_description(const ::std::string& value) {
  
  description_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Message_MapAttribute.description)
}
#if LANG_CXX11
inline void Message_MapAttribute::set_description(::std::string&& value) {
  
  description_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Message_MapAttribute.description)
}
#endif
inline void Message_MapAttribute::set_description(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  description_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Message_MapAttribute.description)
}
inline void Message_MapAttribute::set_description(const char* value, size_t size) {
  
  description_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Message_MapAttribute.description)
}
inline ::std::string* Message_MapAttribute::mutable_description() {
  
  // @@protoc_insertion_point(field_mutable:Message_MapAttribute.description)
  return description_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Message_MapAttribute::release_description() {
  // @@protoc_insertion_point(field_release:Message_MapAttribute.description)
  
  return description_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Message_MapAttribute::set_allocated_description(::std::string* description) {
  if (description != NULL) {
    
  } else {
    
  }
  description_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), description);
  // @@protoc_insertion_point(field_set_allocated:Message_MapAttribute.description)
}

// uint32 color_pen = 2;
inline void Message_MapAttribute::clear_color_pen() {
  color_pen_ = 0u;
}
inline ::google::protobuf::uint32 Message_MapAttribute::color_pen() const {
  // @@protoc_insertion_point(field_get:Message_MapAttribute.color_pen)
  return color_pen_;
}
inline void Message_MapAttribute::set_color_pen(::google::protobuf::uint32 value) {
  
  color_pen_ = value;
  // @@protoc_insertion_point(field_set:Message_MapAttribute.color_pen)
}

// uint32 color_brush = 3;
inline void Message_MapAttribute::clear_color_brush() {
  color_brush_ = 0u;
}
inline ::google::protobuf::uint32 Message_MapAttribute::color_brush() const {
  // @@protoc_insertion_point(field_get:Message_MapAttribute.color_brush)
  return color_brush_;
}
inline void Message_MapAttribute::set_color_brush(::google::protobuf::uint32 value) {
  
  color_brush_ = value;
  // @@protoc_insertion_point(field_set:Message_MapAttribute.color_brush)
}

// uint32 color_font = 4;
inline void Message_MapAttribute::clear_color_font() {
  color_font_ = 0u;
}
inline ::google::protobuf::uint32 Message_MapAttribute::color_font() const {
  // @@protoc_insertion_point(field_get:Message_MapAttribute.color_font)
  return color_font_;
}
inline void Message_MapAttribute::set_color_font(::google::protobuf::uint32 value) {
  
  color_font_ = value;
  // @@protoc_insertion_point(field_set:Message_MapAttribute.color_font)
}

// -------------------------------------------------------------------

// Message_AdvancedPoint

// string class_name = 1;
inline void Message_AdvancedPoint::clear_class_name() {
  class_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Message_AdvancedPoint::class_name() const {
  // @@protoc_insertion_point(field_get:Message_AdvancedPoint.class_name)
  return class_name_.GetNoArena();
}
inline void Message_AdvancedPoint::set_class_name(const ::std::string& value) {
  
  class_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Message_AdvancedPoint.class_name)
}
#if LANG_CXX11
inline void Message_AdvancedPoint::set_class_name(::std::string&& value) {
  
  class_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Message_AdvancedPoint.class_name)
}
#endif
inline void Message_AdvancedPoint::set_class_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  class_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Message_AdvancedPoint.class_name)
}
inline void Message_AdvancedPoint::set_class_name(const char* value, size_t size) {
  
  class_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Message_AdvancedPoint.class_name)
}
inline ::std::string* Message_AdvancedPoint::mutable_class_name() {
  
  // @@protoc_insertion_point(field_mutable:Message_AdvancedPoint.class_name)
  return class_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Message_AdvancedPoint::release_class_name() {
  // @@protoc_insertion_point(field_release:Message_AdvancedPoint.class_name)
  
  return class_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Message_AdvancedPoint::set_allocated_class_name(::std::string* class_name) {
  if (class_name != NULL) {
    
  } else {
    
  }
  class_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), class_name);
  // @@protoc_insertion_point(field_set_allocated:Message_AdvancedPoint.class_name)
}

// string instance_name = 2;
inline void Message_AdvancedPoint::clear_instance_name() {
  instance_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Message_AdvancedPoint::instance_name() const {
  // @@protoc_insertion_point(field_get:Message_AdvancedPoint.instance_name)
  return instance_name_.GetNoArena();
}
inline void Message_AdvancedPoint::set_instance_name(const ::std::string& value) {
  
  instance_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Message_AdvancedPoint.instance_name)
}
#if LANG_CXX11
inline void Message_AdvancedPoint::set_instance_name(::std::string&& value) {
  
  instance_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Message_AdvancedPoint.instance_name)
}
#endif
inline void Message_AdvancedPoint::set_instance_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  instance_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Message_AdvancedPoint.instance_name)
}
inline void Message_AdvancedPoint::set_instance_name(const char* value, size_t size) {
  
  instance_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Message_AdvancedPoint.instance_name)
}
inline ::std::string* Message_AdvancedPoint::mutable_instance_name() {
  
  // @@protoc_insertion_point(field_mutable:Message_AdvancedPoint.instance_name)
  return instance_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Message_AdvancedPoint::release_instance_name() {
  // @@protoc_insertion_point(field_release:Message_AdvancedPoint.instance_name)
  
  return instance_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Message_AdvancedPoint::set_allocated_instance_name(::std::string* instance_name) {
  if (instance_name != NULL) {
    
  } else {
    
  }
  instance_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), instance_name);
  // @@protoc_insertion_point(field_set_allocated:Message_AdvancedPoint.instance_name)
}

// .Message_MapPos pos = 3;
inline bool Message_AdvancedPoint::has_pos() const {
  return this != internal_default_instance() && pos_ != NULL;
}
inline void Message_AdvancedPoint::clear_pos() {
  if (GetArenaNoVirtual() == NULL && pos_ != NULL) {
    delete pos_;
  }
  pos_ = NULL;
}
inline const ::Message_MapPos& Message_AdvancedPoint::pos() const {
  const ::Message_MapPos* p = pos_;
  // @@protoc_insertion_point(field_get:Message_AdvancedPoint.pos)
  return p != NULL ? *p : *reinterpret_cast<const ::Message_MapPos*>(
      &::_Message_MapPos_default_instance_);
}
inline ::Message_MapPos* Message_AdvancedPoint::release_pos() {
  // @@protoc_insertion_point(field_release:Message_AdvancedPoint.pos)
  
  ::Message_MapPos* temp = pos_;
  pos_ = NULL;
  return temp;
}
inline ::Message_MapPos* Message_AdvancedPoint::mutable_pos() {
  
  if (pos_ == NULL) {
    pos_ = new ::Message_MapPos;
  }
  // @@protoc_insertion_point(field_mutable:Message_AdvancedPoint.pos)
  return pos_;
}
inline void Message_AdvancedPoint::set_allocated_pos(::Message_MapPos* pos) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete pos_;
  }
  if (pos) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      pos = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, pos, submessage_arena);
    }
    
  } else {
    
  }
  pos_ = pos;
  // @@protoc_insertion_point(field_set_allocated:Message_AdvancedPoint.pos)
}

// double dir = 4;
inline void Message_AdvancedPoint::clear_dir() {
  dir_ = 0;
}
inline double Message_AdvancedPoint::dir() const {
  // @@protoc_insertion_point(field_get:Message_AdvancedPoint.dir)
  return dir_;
}
inline void Message_AdvancedPoint::set_dir(double value) {
  
  dir_ = value;
  // @@protoc_insertion_point(field_set:Message_AdvancedPoint.dir)
}

// repeated .Message_MapProperty property = 5;
inline int Message_AdvancedPoint::property_size() const {
  return property_.size();
}
inline void Message_AdvancedPoint::clear_property() {
  property_.Clear();
}
inline const ::Message_MapProperty& Message_AdvancedPoint::property(int index) const {
  // @@protoc_insertion_point(field_get:Message_AdvancedPoint.property)
  return property_.Get(index);
}
inline ::Message_MapProperty* Message_AdvancedPoint::mutable_property(int index) {
  // @@protoc_insertion_point(field_mutable:Message_AdvancedPoint.property)
  return property_.Mutable(index);
}
inline ::Message_MapProperty* Message_AdvancedPoint::add_property() {
  // @@protoc_insertion_point(field_add:Message_AdvancedPoint.property)
  return property_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::Message_MapProperty >*
Message_AdvancedPoint::mutable_property() {
  // @@protoc_insertion_point(field_mutable_list:Message_AdvancedPoint.property)
  return &property_;
}
inline const ::google::protobuf::RepeatedPtrField< ::Message_MapProperty >&
Message_AdvancedPoint::property() const {
  // @@protoc_insertion_point(field_list:Message_AdvancedPoint.property)
  return property_;
}

// .Message_MapAttribute attribute = 10;
inline bool Message_AdvancedPoint::has_attribute() const {
  return this != internal_default_instance() && attribute_ != NULL;
}
inline void Message_AdvancedPoint::clear_attribute() {
  if (GetArenaNoVirtual() == NULL && attribute_ != NULL) {
    delete attribute_;
  }
  attribute_ = NULL;
}
inline const ::Message_MapAttribute& Message_AdvancedPoint::attribute() const {
  const ::Message_MapAttribute* p = attribute_;
  // @@protoc_insertion_point(field_get:Message_AdvancedPoint.attribute)
  return p != NULL ? *p : *reinterpret_cast<const ::Message_MapAttribute*>(
      &::_Message_MapAttribute_default_instance_);
}
inline ::Message_MapAttribute* Message_AdvancedPoint::release_attribute() {
  // @@protoc_insertion_point(field_release:Message_AdvancedPoint.attribute)
  
  ::Message_MapAttribute* temp = attribute_;
  attribute_ = NULL;
  return temp;
}
inline ::Message_MapAttribute* Message_AdvancedPoint::mutable_attribute() {
  
  if (attribute_ == NULL) {
    attribute_ = new ::Message_MapAttribute;
  }
  // @@protoc_insertion_point(field_mutable:Message_AdvancedPoint.attribute)
  return attribute_;
}
inline void Message_AdvancedPoint::set_allocated_attribute(::Message_MapAttribute* attribute) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete attribute_;
  }
  if (attribute) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      attribute = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, attribute, submessage_arena);
    }
    
  } else {
    
  }
  attribute_ = attribute;
  // @@protoc_insertion_point(field_set_allocated:Message_AdvancedPoint.attribute)
}

// -------------------------------------------------------------------

// Message_AdvancedLine

// string class_name = 1;
inline void Message_AdvancedLine::clear_class_name() {
  class_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Message_AdvancedLine::class_name() const {
  // @@protoc_insertion_point(field_get:Message_AdvancedLine.class_name)
  return class_name_.GetNoArena();
}
inline void Message_AdvancedLine::set_class_name(const ::std::string& value) {
  
  class_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Message_AdvancedLine.class_name)
}
#if LANG_CXX11
inline void Message_AdvancedLine::set_class_name(::std::string&& value) {
  
  class_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Message_AdvancedLine.class_name)
}
#endif
inline void Message_AdvancedLine::set_class_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  class_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Message_AdvancedLine.class_name)
}
inline void Message_AdvancedLine::set_class_name(const char* value, size_t size) {
  
  class_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Message_AdvancedLine.class_name)
}
inline ::std::string* Message_AdvancedLine::mutable_class_name() {
  
  // @@protoc_insertion_point(field_mutable:Message_AdvancedLine.class_name)
  return class_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Message_AdvancedLine::release_class_name() {
  // @@protoc_insertion_point(field_release:Message_AdvancedLine.class_name)
  
  return class_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Message_AdvancedLine::set_allocated_class_name(::std::string* class_name) {
  if (class_name != NULL) {
    
  } else {
    
  }
  class_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), class_name);
  // @@protoc_insertion_point(field_set_allocated:Message_AdvancedLine.class_name)
}

// string instance_name = 2;
inline void Message_AdvancedLine::clear_instance_name() {
  instance_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Message_AdvancedLine::instance_name() const {
  // @@protoc_insertion_point(field_get:Message_AdvancedLine.instance_name)
  return instance_name_.GetNoArena();
}
inline void Message_AdvancedLine::set_instance_name(const ::std::string& value) {
  
  instance_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Message_AdvancedLine.instance_name)
}
#if LANG_CXX11
inline void Message_AdvancedLine::set_instance_name(::std::string&& value) {
  
  instance_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Message_AdvancedLine.instance_name)
}
#endif
inline void Message_AdvancedLine::set_instance_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  instance_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Message_AdvancedLine.instance_name)
}
inline void Message_AdvancedLine::set_instance_name(const char* value, size_t size) {
  
  instance_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Message_AdvancedLine.instance_name)
}
inline ::std::string* Message_AdvancedLine::mutable_instance_name() {
  
  // @@protoc_insertion_point(field_mutable:Message_AdvancedLine.instance_name)
  return instance_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Message_AdvancedLine::release_instance_name() {
  // @@protoc_insertion_point(field_release:Message_AdvancedLine.instance_name)
  
  return instance_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Message_AdvancedLine::set_allocated_instance_name(::std::string* instance_name) {
  if (instance_name != NULL) {
    
  } else {
    
  }
  instance_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), instance_name);
  // @@protoc_insertion_point(field_set_allocated:Message_AdvancedLine.instance_name)
}

// .Message_MapLine line = 3;
inline bool Message_AdvancedLine::has_line() const {
  return this != internal_default_instance() && line_ != NULL;
}
inline void Message_AdvancedLine::clear_line() {
  if (GetArenaNoVirtual() == NULL && line_ != NULL) {
    delete line_;
  }
  line_ = NULL;
}
inline const ::Message_MapLine& Message_AdvancedLine::line() const {
  const ::Message_MapLine* p = line_;
  // @@protoc_insertion_point(field_get:Message_AdvancedLine.line)
  return p != NULL ? *p : *reinterpret_cast<const ::Message_MapLine*>(
      &::_Message_MapLine_default_instance_);
}
inline ::Message_MapLine* Message_AdvancedLine::release_line() {
  // @@protoc_insertion_point(field_release:Message_AdvancedLine.line)
  
  ::Message_MapLine* temp = line_;
  line_ = NULL;
  return temp;
}
inline ::Message_MapLine* Message_AdvancedLine::mutable_line() {
  
  if (line_ == NULL) {
    line_ = new ::Message_MapLine;
  }
  // @@protoc_insertion_point(field_mutable:Message_AdvancedLine.line)
  return line_;
}
inline void Message_AdvancedLine::set_allocated_line(::Message_MapLine* line) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete line_;
  }
  if (line) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      line = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, line, submessage_arena);
    }
    
  } else {
    
  }
  line_ = line;
  // @@protoc_insertion_point(field_set_allocated:Message_AdvancedLine.line)
}

// repeated .Message_MapProperty property = 4;
inline int Message_AdvancedLine::property_size() const {
  return property_.size();
}
inline void Message_AdvancedLine::clear_property() {
  property_.Clear();
}
inline const ::Message_MapProperty& Message_AdvancedLine::property(int index) const {
  // @@protoc_insertion_point(field_get:Message_AdvancedLine.property)
  return property_.Get(index);
}
inline ::Message_MapProperty* Message_AdvancedLine::mutable_property(int index) {
  // @@protoc_insertion_point(field_mutable:Message_AdvancedLine.property)
  return property_.Mutable(index);
}
inline ::Message_MapProperty* Message_AdvancedLine::add_property() {
  // @@protoc_insertion_point(field_add:Message_AdvancedLine.property)
  return property_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::Message_MapProperty >*
Message_AdvancedLine::mutable_property() {
  // @@protoc_insertion_point(field_mutable_list:Message_AdvancedLine.property)
  return &property_;
}
inline const ::google::protobuf::RepeatedPtrField< ::Message_MapProperty >&
Message_AdvancedLine::property() const {
  // @@protoc_insertion_point(field_list:Message_AdvancedLine.property)
  return property_;
}

// .Message_MapAttribute attribute = 10;
inline bool Message_AdvancedLine::has_attribute() const {
  return this != internal_default_instance() && attribute_ != NULL;
}
inline void Message_AdvancedLine::clear_attribute() {
  if (GetArenaNoVirtual() == NULL && attribute_ != NULL) {
    delete attribute_;
  }
  attribute_ = NULL;
}
inline const ::Message_MapAttribute& Message_AdvancedLine::attribute() const {
  const ::Message_MapAttribute* p = attribute_;
  // @@protoc_insertion_point(field_get:Message_AdvancedLine.attribute)
  return p != NULL ? *p : *reinterpret_cast<const ::Message_MapAttribute*>(
      &::_Message_MapAttribute_default_instance_);
}
inline ::Message_MapAttribute* Message_AdvancedLine::release_attribute() {
  // @@protoc_insertion_point(field_release:Message_AdvancedLine.attribute)
  
  ::Message_MapAttribute* temp = attribute_;
  attribute_ = NULL;
  return temp;
}
inline ::Message_MapAttribute* Message_AdvancedLine::mutable_attribute() {
  
  if (attribute_ == NULL) {
    attribute_ = new ::Message_MapAttribute;
  }
  // @@protoc_insertion_point(field_mutable:Message_AdvancedLine.attribute)
  return attribute_;
}
inline void Message_AdvancedLine::set_allocated_attribute(::Message_MapAttribute* attribute) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete attribute_;
  }
  if (attribute) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      attribute = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, attribute, submessage_arena);
    }
    
  } else {
    
  }
  attribute_ = attribute;
  // @@protoc_insertion_point(field_set_allocated:Message_AdvancedLine.attribute)
}

// -------------------------------------------------------------------

// Message_AdvancedCurve

// string class_name = 1;
inline void Message_AdvancedCurve::clear_class_name() {
  class_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Message_AdvancedCurve::class_name() const {
  // @@protoc_insertion_point(field_get:Message_AdvancedCurve.class_name)
  return class_name_.GetNoArena();
}
inline void Message_AdvancedCurve::set_class_name(const ::std::string& value) {
  
  class_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Message_AdvancedCurve.class_name)
}
#if LANG_CXX11
inline void Message_AdvancedCurve::set_class_name(::std::string&& value) {
  
  class_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Message_AdvancedCurve.class_name)
}
#endif
inline void Message_AdvancedCurve::set_class_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  class_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Message_AdvancedCurve.class_name)
}
inline void Message_AdvancedCurve::set_class_name(const char* value, size_t size) {
  
  class_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Message_AdvancedCurve.class_name)
}
inline ::std::string* Message_AdvancedCurve::mutable_class_name() {
  
  // @@protoc_insertion_point(field_mutable:Message_AdvancedCurve.class_name)
  return class_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Message_AdvancedCurve::release_class_name() {
  // @@protoc_insertion_point(field_release:Message_AdvancedCurve.class_name)
  
  return class_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Message_AdvancedCurve::set_allocated_class_name(::std::string* class_name) {
  if (class_name != NULL) {
    
  } else {
    
  }
  class_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), class_name);
  // @@protoc_insertion_point(field_set_allocated:Message_AdvancedCurve.class_name)
}

// string instance_name = 2;
inline void Message_AdvancedCurve::clear_instance_name() {
  instance_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Message_AdvancedCurve::instance_name() const {
  // @@protoc_insertion_point(field_get:Message_AdvancedCurve.instance_name)
  return instance_name_.GetNoArena();
}
inline void Message_AdvancedCurve::set_instance_name(const ::std::string& value) {
  
  instance_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Message_AdvancedCurve.instance_name)
}
#if LANG_CXX11
inline void Message_AdvancedCurve::set_instance_name(::std::string&& value) {
  
  instance_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Message_AdvancedCurve.instance_name)
}
#endif
inline void Message_AdvancedCurve::set_instance_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  instance_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Message_AdvancedCurve.instance_name)
}
inline void Message_AdvancedCurve::set_instance_name(const char* value, size_t size) {
  
  instance_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Message_AdvancedCurve.instance_name)
}
inline ::std::string* Message_AdvancedCurve::mutable_instance_name() {
  
  // @@protoc_insertion_point(field_mutable:Message_AdvancedCurve.instance_name)
  return instance_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Message_AdvancedCurve::release_instance_name() {
  // @@protoc_insertion_point(field_release:Message_AdvancedCurve.instance_name)
  
  return instance_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Message_AdvancedCurve::set_allocated_instance_name(::std::string* instance_name) {
  if (instance_name != NULL) {
    
  } else {
    
  }
  instance_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), instance_name);
  // @@protoc_insertion_point(field_set_allocated:Message_AdvancedCurve.instance_name)
}

// .Message_AdvancedPoint start_pos = 3;
inline bool Message_AdvancedCurve::has_start_pos() const {
  return this != internal_default_instance() && start_pos_ != NULL;
}
inline void Message_AdvancedCurve::clear_start_pos() {
  if (GetArenaNoVirtual() == NULL && start_pos_ != NULL) {
    delete start_pos_;
  }
  start_pos_ = NULL;
}
inline const ::Message_AdvancedPoint& Message_AdvancedCurve::start_pos() const {
  const ::Message_AdvancedPoint* p = start_pos_;
  // @@protoc_insertion_point(field_get:Message_AdvancedCurve.start_pos)
  return p != NULL ? *p : *reinterpret_cast<const ::Message_AdvancedPoint*>(
      &::_Message_AdvancedPoint_default_instance_);
}
inline ::Message_AdvancedPoint* Message_AdvancedCurve::release_start_pos() {
  // @@protoc_insertion_point(field_release:Message_AdvancedCurve.start_pos)
  
  ::Message_AdvancedPoint* temp = start_pos_;
  start_pos_ = NULL;
  return temp;
}
inline ::Message_AdvancedPoint* Message_AdvancedCurve::mutable_start_pos() {
  
  if (start_pos_ == NULL) {
    start_pos_ = new ::Message_AdvancedPoint;
  }
  // @@protoc_insertion_point(field_mutable:Message_AdvancedCurve.start_pos)
  return start_pos_;
}
inline void Message_AdvancedCurve::set_allocated_start_pos(::Message_AdvancedPoint* start_pos) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete start_pos_;
  }
  if (start_pos) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      start_pos = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, start_pos, submessage_arena);
    }
    
  } else {
    
  }
  start_pos_ = start_pos;
  // @@protoc_insertion_point(field_set_allocated:Message_AdvancedCurve.start_pos)
}

// .Message_AdvancedPoint end_pos = 4;
inline bool Message_AdvancedCurve::has_end_pos() const {
  return this != internal_default_instance() && end_pos_ != NULL;
}
inline void Message_AdvancedCurve::clear_end_pos() {
  if (GetArenaNoVirtual() == NULL && end_pos_ != NULL) {
    delete end_pos_;
  }
  end_pos_ = NULL;
}
inline const ::Message_AdvancedPoint& Message_AdvancedCurve::end_pos() const {
  const ::Message_AdvancedPoint* p = end_pos_;
  // @@protoc_insertion_point(field_get:Message_AdvancedCurve.end_pos)
  return p != NULL ? *p : *reinterpret_cast<const ::Message_AdvancedPoint*>(
      &::_Message_AdvancedPoint_default_instance_);
}
inline ::Message_AdvancedPoint* Message_AdvancedCurve::release_end_pos() {
  // @@protoc_insertion_point(field_release:Message_AdvancedCurve.end_pos)
  
  ::Message_AdvancedPoint* temp = end_pos_;
  end_pos_ = NULL;
  return temp;
}
inline ::Message_AdvancedPoint* Message_AdvancedCurve::mutable_end_pos() {
  
  if (end_pos_ == NULL) {
    end_pos_ = new ::Message_AdvancedPoint;
  }
  // @@protoc_insertion_point(field_mutable:Message_AdvancedCurve.end_pos)
  return end_pos_;
}
inline void Message_AdvancedCurve::set_allocated_end_pos(::Message_AdvancedPoint* end_pos) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete end_pos_;
  }
  if (end_pos) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      end_pos = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, end_pos, submessage_arena);
    }
    
  } else {
    
  }
  end_pos_ = end_pos;
  // @@protoc_insertion_point(field_set_allocated:Message_AdvancedCurve.end_pos)
}

// .Message_MapPos control_pos1 = 5;
inline bool Message_AdvancedCurve::has_control_pos1() const {
  return this != internal_default_instance() && control_pos1_ != NULL;
}
inline void Message_AdvancedCurve::clear_control_pos1() {
  if (GetArenaNoVirtual() == NULL && control_pos1_ != NULL) {
    delete control_pos1_;
  }
  control_pos1_ = NULL;
}
inline const ::Message_MapPos& Message_AdvancedCurve::control_pos1() const {
  const ::Message_MapPos* p = control_pos1_;
  // @@protoc_insertion_point(field_get:Message_AdvancedCurve.control_pos1)
  return p != NULL ? *p : *reinterpret_cast<const ::Message_MapPos*>(
      &::_Message_MapPos_default_instance_);
}
inline ::Message_MapPos* Message_AdvancedCurve::release_control_pos1() {
  // @@protoc_insertion_point(field_release:Message_AdvancedCurve.control_pos1)
  
  ::Message_MapPos* temp = control_pos1_;
  control_pos1_ = NULL;
  return temp;
}
inline ::Message_MapPos* Message_AdvancedCurve::mutable_control_pos1() {
  
  if (control_pos1_ == NULL) {
    control_pos1_ = new ::Message_MapPos;
  }
  // @@protoc_insertion_point(field_mutable:Message_AdvancedCurve.control_pos1)
  return control_pos1_;
}
inline void Message_AdvancedCurve::set_allocated_control_pos1(::Message_MapPos* control_pos1) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete control_pos1_;
  }
  if (control_pos1) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      control_pos1 = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, control_pos1, submessage_arena);
    }
    
  } else {
    
  }
  control_pos1_ = control_pos1;
  // @@protoc_insertion_point(field_set_allocated:Message_AdvancedCurve.control_pos1)
}

// .Message_MapPos control_pos2 = 6;
inline bool Message_AdvancedCurve::has_control_pos2() const {
  return this != internal_default_instance() && control_pos2_ != NULL;
}
inline void Message_AdvancedCurve::clear_control_pos2() {
  if (GetArenaNoVirtual() == NULL && control_pos2_ != NULL) {
    delete control_pos2_;
  }
  control_pos2_ = NULL;
}
inline const ::Message_MapPos& Message_AdvancedCurve::control_pos2() const {
  const ::Message_MapPos* p = control_pos2_;
  // @@protoc_insertion_point(field_get:Message_AdvancedCurve.control_pos2)
  return p != NULL ? *p : *reinterpret_cast<const ::Message_MapPos*>(
      &::_Message_MapPos_default_instance_);
}
inline ::Message_MapPos* Message_AdvancedCurve::release_control_pos2() {
  // @@protoc_insertion_point(field_release:Message_AdvancedCurve.control_pos2)
  
  ::Message_MapPos* temp = control_pos2_;
  control_pos2_ = NULL;
  return temp;
}
inline ::Message_MapPos* Message_AdvancedCurve::mutable_control_pos2() {
  
  if (control_pos2_ == NULL) {
    control_pos2_ = new ::Message_MapPos;
  }
  // @@protoc_insertion_point(field_mutable:Message_AdvancedCurve.control_pos2)
  return control_pos2_;
}
inline void Message_AdvancedCurve::set_allocated_control_pos2(::Message_MapPos* control_pos2) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete control_pos2_;
  }
  if (control_pos2) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      control_pos2 = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, control_pos2, submessage_arena);
    }
    
  } else {
    
  }
  control_pos2_ = control_pos2;
  // @@protoc_insertion_point(field_set_allocated:Message_AdvancedCurve.control_pos2)
}

// repeated .Message_MapProperty property = 7;
inline int Message_AdvancedCurve::property_size() const {
  return property_.size();
}
inline void Message_AdvancedCurve::clear_property() {
  property_.Clear();
}
inline const ::Message_MapProperty& Message_AdvancedCurve::property(int index) const {
  // @@protoc_insertion_point(field_get:Message_AdvancedCurve.property)
  return property_.Get(index);
}
inline ::Message_MapProperty* Message_AdvancedCurve::mutable_property(int index) {
  // @@protoc_insertion_point(field_mutable:Message_AdvancedCurve.property)
  return property_.Mutable(index);
}
inline ::Message_MapProperty* Message_AdvancedCurve::add_property() {
  // @@protoc_insertion_point(field_add:Message_AdvancedCurve.property)
  return property_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::Message_MapProperty >*
Message_AdvancedCurve::mutable_property() {
  // @@protoc_insertion_point(field_mutable_list:Message_AdvancedCurve.property)
  return &property_;
}
inline const ::google::protobuf::RepeatedPtrField< ::Message_MapProperty >&
Message_AdvancedCurve::property() const {
  // @@protoc_insertion_point(field_list:Message_AdvancedCurve.property)
  return property_;
}

// repeated .Message_Device devices = 12;
inline int Message_AdvancedCurve::devices_size() const {
  return devices_.size();
}
inline void Message_AdvancedCurve::clear_devices() {
  devices_.Clear();
}
inline const ::Message_Device& Message_AdvancedCurve::devices(int index) const {
  // @@protoc_insertion_point(field_get:Message_AdvancedCurve.devices)
  return devices_.Get(index);
}
inline ::Message_Device* Message_AdvancedCurve::mutable_devices(int index) {
  // @@protoc_insertion_point(field_mutable:Message_AdvancedCurve.devices)
  return devices_.Mutable(index);
}
inline ::Message_Device* Message_AdvancedCurve::add_devices() {
  // @@protoc_insertion_point(field_add:Message_AdvancedCurve.devices)
  return devices_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::Message_Device >*
Message_AdvancedCurve::mutable_devices() {
  // @@protoc_insertion_point(field_mutable_list:Message_AdvancedCurve.devices)
  return &devices_;
}
inline const ::google::protobuf::RepeatedPtrField< ::Message_Device >&
Message_AdvancedCurve::devices() const {
  // @@protoc_insertion_point(field_list:Message_AdvancedCurve.devices)
  return devices_;
}

// .Message_MapAttribute attribute = 15;
inline bool Message_AdvancedCurve::has_attribute() const {
  return this != internal_default_instance() && attribute_ != NULL;
}
inline void Message_AdvancedCurve::clear_attribute() {
  if (GetArenaNoVirtual() == NULL && attribute_ != NULL) {
    delete attribute_;
  }
  attribute_ = NULL;
}
inline const ::Message_MapAttribute& Message_AdvancedCurve::attribute() const {
  const ::Message_MapAttribute* p = attribute_;
  // @@protoc_insertion_point(field_get:Message_AdvancedCurve.attribute)
  return p != NULL ? *p : *reinterpret_cast<const ::Message_MapAttribute*>(
      &::_Message_MapAttribute_default_instance_);
}
inline ::Message_MapAttribute* Message_AdvancedCurve::release_attribute() {
  // @@protoc_insertion_point(field_release:Message_AdvancedCurve.attribute)
  
  ::Message_MapAttribute* temp = attribute_;
  attribute_ = NULL;
  return temp;
}
inline ::Message_MapAttribute* Message_AdvancedCurve::mutable_attribute() {
  
  if (attribute_ == NULL) {
    attribute_ = new ::Message_MapAttribute;
  }
  // @@protoc_insertion_point(field_mutable:Message_AdvancedCurve.attribute)
  return attribute_;
}
inline void Message_AdvancedCurve::set_allocated_attribute(::Message_MapAttribute* attribute) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete attribute_;
  }
  if (attribute) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      attribute = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, attribute, submessage_arena);
    }
    
  } else {
    
  }
  attribute_ = attribute;
  // @@protoc_insertion_point(field_set_allocated:Message_AdvancedCurve.attribute)
}

// -------------------------------------------------------------------

// Message_AdvancedArea

// string class_name = 1;
inline void Message_AdvancedArea::clear_class_name() {
  class_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Message_AdvancedArea::class_name() const {
  // @@protoc_insertion_point(field_get:Message_AdvancedArea.class_name)
  return class_name_.GetNoArena();
}
inline void Message_AdvancedArea::set_class_name(const ::std::string& value) {
  
  class_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Message_AdvancedArea.class_name)
}
#if LANG_CXX11
inline void Message_AdvancedArea::set_class_name(::std::string&& value) {
  
  class_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Message_AdvancedArea.class_name)
}
#endif
inline void Message_AdvancedArea::set_class_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  class_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Message_AdvancedArea.class_name)
}
inline void Message_AdvancedArea::set_class_name(const char* value, size_t size) {
  
  class_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Message_AdvancedArea.class_name)
}
inline ::std::string* Message_AdvancedArea::mutable_class_name() {
  
  // @@protoc_insertion_point(field_mutable:Message_AdvancedArea.class_name)
  return class_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Message_AdvancedArea::release_class_name() {
  // @@protoc_insertion_point(field_release:Message_AdvancedArea.class_name)
  
  return class_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Message_AdvancedArea::set_allocated_class_name(::std::string* class_name) {
  if (class_name != NULL) {
    
  } else {
    
  }
  class_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), class_name);
  // @@protoc_insertion_point(field_set_allocated:Message_AdvancedArea.class_name)
}

// string instance_name = 2;
inline void Message_AdvancedArea::clear_instance_name() {
  instance_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Message_AdvancedArea::instance_name() const {
  // @@protoc_insertion_point(field_get:Message_AdvancedArea.instance_name)
  return instance_name_.GetNoArena();
}
inline void Message_AdvancedArea::set_instance_name(const ::std::string& value) {
  
  instance_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Message_AdvancedArea.instance_name)
}
#if LANG_CXX11
inline void Message_AdvancedArea::set_instance_name(::std::string&& value) {
  
  instance_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Message_AdvancedArea.instance_name)
}
#endif
inline void Message_AdvancedArea::set_instance_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  instance_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Message_AdvancedArea.instance_name)
}
inline void Message_AdvancedArea::set_instance_name(const char* value, size_t size) {
  
  instance_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Message_AdvancedArea.instance_name)
}
inline ::std::string* Message_AdvancedArea::mutable_instance_name() {
  
  // @@protoc_insertion_point(field_mutable:Message_AdvancedArea.instance_name)
  return instance_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Message_AdvancedArea::release_instance_name() {
  // @@protoc_insertion_point(field_release:Message_AdvancedArea.instance_name)
  
  return instance_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Message_AdvancedArea::set_allocated_instance_name(::std::string* instance_name) {
  if (instance_name != NULL) {
    
  } else {
    
  }
  instance_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), instance_name);
  // @@protoc_insertion_point(field_set_allocated:Message_AdvancedArea.instance_name)
}

// repeated .Message_MapPos pos_group = 3;
inline int Message_AdvancedArea::pos_group_size() const {
  return pos_group_.size();
}
inline void Message_AdvancedArea::clear_pos_group() {
  pos_group_.Clear();
}
inline const ::Message_MapPos& Message_AdvancedArea::pos_group(int index) const {
  // @@protoc_insertion_point(field_get:Message_AdvancedArea.pos_group)
  return pos_group_.Get(index);
}
inline ::Message_MapPos* Message_AdvancedArea::mutable_pos_group(int index) {
  // @@protoc_insertion_point(field_mutable:Message_AdvancedArea.pos_group)
  return pos_group_.Mutable(index);
}
inline ::Message_MapPos* Message_AdvancedArea::add_pos_group() {
  // @@protoc_insertion_point(field_add:Message_AdvancedArea.pos_group)
  return pos_group_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::Message_MapPos >*
Message_AdvancedArea::mutable_pos_group() {
  // @@protoc_insertion_point(field_mutable_list:Message_AdvancedArea.pos_group)
  return &pos_group_;
}
inline const ::google::protobuf::RepeatedPtrField< ::Message_MapPos >&
Message_AdvancedArea::pos_group() const {
  // @@protoc_insertion_point(field_list:Message_AdvancedArea.pos_group)
  return pos_group_;
}

// double dir = 4;
inline void Message_AdvancedArea::clear_dir() {
  dir_ = 0;
}
inline double Message_AdvancedArea::dir() const {
  // @@protoc_insertion_point(field_get:Message_AdvancedArea.dir)
  return dir_;
}
inline void Message_AdvancedArea::set_dir(double value) {
  
  dir_ = value;
  // @@protoc_insertion_point(field_set:Message_AdvancedArea.dir)
}

// repeated .Message_MapProperty property = 5;
inline int Message_AdvancedArea::property_size() const {
  return property_.size();
}
inline void Message_AdvancedArea::clear_property() {
  property_.Clear();
}
inline const ::Message_MapProperty& Message_AdvancedArea::property(int index) const {
  // @@protoc_insertion_point(field_get:Message_AdvancedArea.property)
  return property_.Get(index);
}
inline ::Message_MapProperty* Message_AdvancedArea::mutable_property(int index) {
  // @@protoc_insertion_point(field_mutable:Message_AdvancedArea.property)
  return property_.Mutable(index);
}
inline ::Message_MapProperty* Message_AdvancedArea::add_property() {
  // @@protoc_insertion_point(field_add:Message_AdvancedArea.property)
  return property_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::Message_MapProperty >*
Message_AdvancedArea::mutable_property() {
  // @@protoc_insertion_point(field_mutable_list:Message_AdvancedArea.property)
  return &property_;
}
inline const ::google::protobuf::RepeatedPtrField< ::Message_MapProperty >&
Message_AdvancedArea::property() const {
  // @@protoc_insertion_point(field_list:Message_AdvancedArea.property)
  return property_;
}

// repeated .Message_Device devices = 10;
inline int Message_AdvancedArea::devices_size() const {
  return devices_.size();
}
inline void Message_AdvancedArea::clear_devices() {
  devices_.Clear();
}
inline const ::Message_Device& Message_AdvancedArea::devices(int index) const {
  // @@protoc_insertion_point(field_get:Message_AdvancedArea.devices)
  return devices_.Get(index);
}
inline ::Message_Device* Message_AdvancedArea::mutable_devices(int index) {
  // @@protoc_insertion_point(field_mutable:Message_AdvancedArea.devices)
  return devices_.Mutable(index);
}
inline ::Message_Device* Message_AdvancedArea::add_devices() {
  // @@protoc_insertion_point(field_add:Message_AdvancedArea.devices)
  return devices_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::Message_Device >*
Message_AdvancedArea::mutable_devices() {
  // @@protoc_insertion_point(field_mutable_list:Message_AdvancedArea.devices)
  return &devices_;
}
inline const ::google::protobuf::RepeatedPtrField< ::Message_Device >&
Message_AdvancedArea::devices() const {
  // @@protoc_insertion_point(field_list:Message_AdvancedArea.devices)
  return devices_;
}

// .Message_MapAttribute attribute = 15;
inline bool Message_AdvancedArea::has_attribute() const {
  return this != internal_default_instance() && attribute_ != NULL;
}
inline void Message_AdvancedArea::clear_attribute() {
  if (GetArenaNoVirtual() == NULL && attribute_ != NULL) {
    delete attribute_;
  }
  attribute_ = NULL;
}
inline const ::Message_MapAttribute& Message_AdvancedArea::attribute() const {
  const ::Message_MapAttribute* p = attribute_;
  // @@protoc_insertion_point(field_get:Message_AdvancedArea.attribute)
  return p != NULL ? *p : *reinterpret_cast<const ::Message_MapAttribute*>(
      &::_Message_MapAttribute_default_instance_);
}
inline ::Message_MapAttribute* Message_AdvancedArea::release_attribute() {
  // @@protoc_insertion_point(field_release:Message_AdvancedArea.attribute)
  
  ::Message_MapAttribute* temp = attribute_;
  attribute_ = NULL;
  return temp;
}
inline ::Message_MapAttribute* Message_AdvancedArea::mutable_attribute() {
  
  if (attribute_ == NULL) {
    attribute_ = new ::Message_MapAttribute;
  }
  // @@protoc_insertion_point(field_mutable:Message_AdvancedArea.attribute)
  return attribute_;
}
inline void Message_AdvancedArea::set_allocated_attribute(::Message_MapAttribute* attribute) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete attribute_;
  }
  if (attribute) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      attribute = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, attribute, submessage_arena);
    }
    
  } else {
    
  }
  attribute_ = attribute;
  // @@protoc_insertion_point(field_set_allocated:Message_AdvancedArea.attribute)
}

// -------------------------------------------------------------------

// Message_LaserDevice

// uint32 id = 1;
inline void Message_LaserDevice::clear_id() {
  id_ = 0u;
}
inline ::google::protobuf::uint32 Message_LaserDevice::id() const {
  // @@protoc_insertion_point(field_get:Message_LaserDevice.id)
  return id_;
}
inline void Message_LaserDevice::set_id(::google::protobuf::uint32 value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:Message_LaserDevice.id)
}

// repeated .Message_MapPos laser_margin_pos = 2;
inline int Message_LaserDevice::laser_margin_pos_size() const {
  return laser_margin_pos_.size();
}
inline void Message_LaserDevice::clear_laser_margin_pos() {
  laser_margin_pos_.Clear();
}
inline const ::Message_MapPos& Message_LaserDevice::laser_margin_pos(int index) const {
  // @@protoc_insertion_point(field_get:Message_LaserDevice.laser_margin_pos)
  return laser_margin_pos_.Get(index);
}
inline ::Message_MapPos* Message_LaserDevice::mutable_laser_margin_pos(int index) {
  // @@protoc_insertion_point(field_mutable:Message_LaserDevice.laser_margin_pos)
  return laser_margin_pos_.Mutable(index);
}
inline ::Message_MapPos* Message_LaserDevice::add_laser_margin_pos() {
  // @@protoc_insertion_point(field_add:Message_LaserDevice.laser_margin_pos)
  return laser_margin_pos_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::Message_MapPos >*
Message_LaserDevice::mutable_laser_margin_pos() {
  // @@protoc_insertion_point(field_mutable_list:Message_LaserDevice.laser_margin_pos)
  return &laser_margin_pos_;
}
inline const ::google::protobuf::RepeatedPtrField< ::Message_MapPos >&
Message_LaserDevice::laser_margin_pos() const {
  // @@protoc_insertion_point(field_list:Message_LaserDevice.laser_margin_pos)
  return laser_margin_pos_;
}

// -------------------------------------------------------------------

// Message_Device

// string model_name = 1;
inline void Message_Device::clear_model_name() {
  model_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Message_Device::model_name() const {
  // @@protoc_insertion_point(field_get:Message_Device.model_name)
  return model_name_.GetNoArena();
}
inline void Message_Device::set_model_name(const ::std::string& value) {
  
  model_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Message_Device.model_name)
}
#if LANG_CXX11
inline void Message_Device::set_model_name(::std::string&& value) {
  
  model_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Message_Device.model_name)
}
#endif
inline void Message_Device::set_model_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  model_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Message_Device.model_name)
}
inline void Message_Device::set_model_name(const char* value, size_t size) {
  
  model_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Message_Device.model_name)
}
inline ::std::string* Message_Device::mutable_model_name() {
  
  // @@protoc_insertion_point(field_mutable:Message_Device.model_name)
  return model_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Message_Device::release_model_name() {
  // @@protoc_insertion_point(field_release:Message_Device.model_name)
  
  return model_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Message_Device::set_allocated_model_name(::std::string* model_name) {
  if (model_name != NULL) {
    
  } else {
    
  }
  model_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), model_name);
  // @@protoc_insertion_point(field_set_allocated:Message_Device.model_name)
}

// repeated .Message_LaserDevice laser_devices = 5;
inline int Message_Device::laser_devices_size() const {
  return laser_devices_.size();
}
inline void Message_Device::clear_laser_devices() {
  laser_devices_.Clear();
}
inline const ::Message_LaserDevice& Message_Device::laser_devices(int index) const {
  // @@protoc_insertion_point(field_get:Message_Device.laser_devices)
  return laser_devices_.Get(index);
}
inline ::Message_LaserDevice* Message_Device::mutable_laser_devices(int index) {
  // @@protoc_insertion_point(field_mutable:Message_Device.laser_devices)
  return laser_devices_.Mutable(index);
}
inline ::Message_LaserDevice* Message_Device::add_laser_devices() {
  // @@protoc_insertion_point(field_add:Message_Device.laser_devices)
  return laser_devices_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::Message_LaserDevice >*
Message_Device::mutable_laser_devices() {
  // @@protoc_insertion_point(field_mutable_list:Message_Device.laser_devices)
  return &laser_devices_;
}
inline const ::google::protobuf::RepeatedPtrField< ::Message_LaserDevice >&
Message_Device::laser_devices() const {
  // @@protoc_insertion_point(field_list:Message_Device.laser_devices)
  return laser_devices_;
}

// repeated double ultrasonic_dist = 6;
inline int Message_Device::ultrasonic_dist_size() const {
  return ultrasonic_dist_.size();
}
inline void Message_Device::clear_ultrasonic_dist() {
  ultrasonic_dist_.Clear();
}
inline double Message_Device::ultrasonic_dist(int index) const {
  // @@protoc_insertion_point(field_get:Message_Device.ultrasonic_dist)
  return ultrasonic_dist_.Get(index);
}
inline void Message_Device::set_ultrasonic_dist(int index, double value) {
  ultrasonic_dist_.Set(index, value);
  // @@protoc_insertion_point(field_set:Message_Device.ultrasonic_dist)
}
inline void Message_Device::add_ultrasonic_dist(double value) {
  ultrasonic_dist_.Add(value);
  // @@protoc_insertion_point(field_add:Message_Device.ultrasonic_dist)
}
inline const ::google::protobuf::RepeatedField< double >&
Message_Device::ultrasonic_dist() const {
  // @@protoc_insertion_point(field_list:Message_Device.ultrasonic_dist)
  return ultrasonic_dist_;
}
inline ::google::protobuf::RepeatedField< double >*
Message_Device::mutable_ultrasonic_dist() {
  // @@protoc_insertion_point(field_mutable_list:Message_Device.ultrasonic_dist)
  return &ultrasonic_dist_;
}

// repeated double fallingdown_dist = 7;
inline int Message_Device::fallingdown_dist_size() const {
  return fallingdown_dist_.size();
}
inline void Message_Device::clear_fallingdown_dist() {
  fallingdown_dist_.Clear();
}
inline double Message_Device::fallingdown_dist(int index) const {
  // @@protoc_insertion_point(field_get:Message_Device.fallingdown_dist)
  return fallingdown_dist_.Get(index);
}
inline void Message_Device::set_fallingdown_dist(int index, double value) {
  fallingdown_dist_.Set(index, value);
  // @@protoc_insertion_point(field_set:Message_Device.fallingdown_dist)
}
inline void Message_Device::add_fallingdown_dist(double value) {
  fallingdown_dist_.Add(value);
  // @@protoc_insertion_point(field_add:Message_Device.fallingdown_dist)
}
inline const ::google::protobuf::RepeatedField< double >&
Message_Device::fallingdown_dist() const {
  // @@protoc_insertion_point(field_list:Message_Device.fallingdown_dist)
  return fallingdown_dist_;
}
inline ::google::protobuf::RepeatedField< double >*
Message_Device::mutable_fallingdown_dist() {
  // @@protoc_insertion_point(field_mutable_list:Message_Device.fallingdown_dist)
  return &fallingdown_dist_;
}

// -------------------------------------------------------------------

// Message_PatrolRouteStation

// string id = 1;
inline void Message_PatrolRouteStation::clear_id() {
  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Message_PatrolRouteStation::id() const {
  // @@protoc_insertion_point(field_get:Message_PatrolRouteStation.id)
  return id_.GetNoArena();
}
inline void Message_PatrolRouteStation::set_id(const ::std::string& value) {
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Message_PatrolRouteStation.id)
}
#if LANG_CXX11
inline void Message_PatrolRouteStation::set_id(::std::string&& value) {
  
  id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Message_PatrolRouteStation.id)
}
#endif
inline void Message_PatrolRouteStation::set_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Message_PatrolRouteStation.id)
}
inline void Message_PatrolRouteStation::set_id(const char* value, size_t size) {
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Message_PatrolRouteStation.id)
}
inline ::std::string* Message_PatrolRouteStation::mutable_id() {
  
  // @@protoc_insertion_point(field_mutable:Message_PatrolRouteStation.id)
  return id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Message_PatrolRouteStation::release_id() {
  // @@protoc_insertion_point(field_release:Message_PatrolRouteStation.id)
  
  return id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Message_PatrolRouteStation::set_allocated_id(::std::string* id) {
  if (id != NULL) {
    
  } else {
    
  }
  id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), id);
  // @@protoc_insertion_point(field_set_allocated:Message_PatrolRouteStation.id)
}

// -------------------------------------------------------------------

// Message_PatrolRoute

// string name = 1;
inline void Message_PatrolRoute::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Message_PatrolRoute::name() const {
  // @@protoc_insertion_point(field_get:Message_PatrolRoute.name)
  return name_.GetNoArena();
}
inline void Message_PatrolRoute::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Message_PatrolRoute.name)
}
#if LANG_CXX11
inline void Message_PatrolRoute::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Message_PatrolRoute.name)
}
#endif
inline void Message_PatrolRoute::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Message_PatrolRoute.name)
}
inline void Message_PatrolRoute::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Message_PatrolRoute.name)
}
inline ::std::string* Message_PatrolRoute::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:Message_PatrolRoute.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Message_PatrolRoute::release_name() {
  // @@protoc_insertion_point(field_release:Message_PatrolRoute.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Message_PatrolRoute::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:Message_PatrolRoute.name)
}

// repeated .Message_PatrolRouteStation station_list = 2;
inline int Message_PatrolRoute::station_list_size() const {
  return station_list_.size();
}
inline void Message_PatrolRoute::clear_station_list() {
  station_list_.Clear();
}
inline const ::Message_PatrolRouteStation& Message_PatrolRoute::station_list(int index) const {
  // @@protoc_insertion_point(field_get:Message_PatrolRoute.station_list)
  return station_list_.Get(index);
}
inline ::Message_PatrolRouteStation* Message_PatrolRoute::mutable_station_list(int index) {
  // @@protoc_insertion_point(field_mutable:Message_PatrolRoute.station_list)
  return station_list_.Mutable(index);
}
inline ::Message_PatrolRouteStation* Message_PatrolRoute::add_station_list() {
  // @@protoc_insertion_point(field_add:Message_PatrolRoute.station_list)
  return station_list_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::Message_PatrolRouteStation >*
Message_PatrolRoute::mutable_station_list() {
  // @@protoc_insertion_point(field_mutable_list:Message_PatrolRoute.station_list)
  return &station_list_;
}
inline const ::google::protobuf::RepeatedPtrField< ::Message_PatrolRouteStation >&
Message_PatrolRoute::station_list() const {
  // @@protoc_insertion_point(field_list:Message_PatrolRoute.station_list)
  return station_list_;
}

// .google.protobuf.DoubleValue max_speed = 4;
inline bool Message_PatrolRoute::has_max_speed() const {
  return this != internal_default_instance() && max_speed_ != NULL;
}
inline const ::google::protobuf::DoubleValue& Message_PatrolRoute::max_speed() const {
  const ::google::protobuf::DoubleValue* p = max_speed_;
  // @@protoc_insertion_point(field_get:Message_PatrolRoute.max_speed)
  return p != NULL ? *p : *reinterpret_cast<const ::google::protobuf::DoubleValue*>(
      &::google::protobuf::_DoubleValue_default_instance_);
}
inline ::google::protobuf::DoubleValue* Message_PatrolRoute::release_max_speed() {
  // @@protoc_insertion_point(field_release:Message_PatrolRoute.max_speed)
  
  ::google::protobuf::DoubleValue* temp = max_speed_;
  max_speed_ = NULL;
  return temp;
}
inline ::google::protobuf::DoubleValue* Message_PatrolRoute::mutable_max_speed() {
  
  if (max_speed_ == NULL) {
    max_speed_ = new ::google::protobuf::DoubleValue;
  }
  // @@protoc_insertion_point(field_mutable:Message_PatrolRoute.max_speed)
  return max_speed_;
}
inline void Message_PatrolRoute::set_allocated_max_speed(::google::protobuf::DoubleValue* max_speed) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(max_speed_);
  }
  if (max_speed) {
    ::google::protobuf::Arena* submessage_arena =
      reinterpret_cast< ::google::protobuf::MessageLite*>(max_speed)->GetArena();
    if (message_arena != submessage_arena) {
      max_speed = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, max_speed, submessage_arena);
    }
    
  } else {
    
  }
  max_speed_ = max_speed;
  // @@protoc_insertion_point(field_set_allocated:Message_PatrolRoute.max_speed)
}

// .google.protobuf.DoubleValue max_acc = 5;
inline bool Message_PatrolRoute::has_max_acc() const {
  return this != internal_default_instance() && max_acc_ != NULL;
}
inline const ::google::protobuf::DoubleValue& Message_PatrolRoute::max_acc() const {
  const ::google::protobuf::DoubleValue* p = max_acc_;
  // @@protoc_insertion_point(field_get:Message_PatrolRoute.max_acc)
  return p != NULL ? *p : *reinterpret_cast<const ::google::protobuf::DoubleValue*>(
      &::google::protobuf::_DoubleValue_default_instance_);
}
inline ::google::protobuf::DoubleValue* Message_PatrolRoute::release_max_acc() {
  // @@protoc_insertion_point(field_release:Message_PatrolRoute.max_acc)
  
  ::google::protobuf::DoubleValue* temp = max_acc_;
  max_acc_ = NULL;
  return temp;
}
inline ::google::protobuf::DoubleValue* Message_PatrolRoute::mutable_max_acc() {
  
  if (max_acc_ == NULL) {
    max_acc_ = new ::google::protobuf::DoubleValue;
  }
  // @@protoc_insertion_point(field_mutable:Message_PatrolRoute.max_acc)
  return max_acc_;
}
inline void Message_PatrolRoute::set_allocated_max_acc(::google::protobuf::DoubleValue* max_acc) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(max_acc_);
  }
  if (max_acc) {
    ::google::protobuf::Arena* submessage_arena =
      reinterpret_cast< ::google::protobuf::MessageLite*>(max_acc)->GetArena();
    if (message_arena != submessage_arena) {
      max_acc = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, max_acc, submessage_arena);
    }
    
  } else {
    
  }
  max_acc_ = max_acc;
  // @@protoc_insertion_point(field_set_allocated:Message_PatrolRoute.max_acc)
}

// .google.protobuf.DoubleValue max_rot = 6;
inline bool Message_PatrolRoute::has_max_rot() const {
  return this != internal_default_instance() && max_rot_ != NULL;
}
inline const ::google::protobuf::DoubleValue& Message_PatrolRoute::max_rot() const {
  const ::google::protobuf::DoubleValue* p = max_rot_;
  // @@protoc_insertion_point(field_get:Message_PatrolRoute.max_rot)
  return p != NULL ? *p : *reinterpret_cast<const ::google::protobuf::DoubleValue*>(
      &::google::protobuf::_DoubleValue_default_instance_);
}
inline ::google::protobuf::DoubleValue* Message_PatrolRoute::release_max_rot() {
  // @@protoc_insertion_point(field_release:Message_PatrolRoute.max_rot)
  
  ::google::protobuf::DoubleValue* temp = max_rot_;
  max_rot_ = NULL;
  return temp;
}
inline ::google::protobuf::DoubleValue* Message_PatrolRoute::mutable_max_rot() {
  
  if (max_rot_ == NULL) {
    max_rot_ = new ::google::protobuf::DoubleValue;
  }
  // @@protoc_insertion_point(field_mutable:Message_PatrolRoute.max_rot)
  return max_rot_;
}
inline void Message_PatrolRoute::set_allocated_max_rot(::google::protobuf::DoubleValue* max_rot) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(max_rot_);
  }
  if (max_rot) {
    ::google::protobuf::Arena* submessage_arena =
      reinterpret_cast< ::google::protobuf::MessageLite*>(max_rot)->GetArena();
    if (message_arena != submessage_arena) {
      max_rot = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, max_rot, submessage_arena);
    }
    
  } else {
    
  }
  max_rot_ = max_rot;
  // @@protoc_insertion_point(field_set_allocated:Message_PatrolRoute.max_rot)
}

// .google.protobuf.DoubleValue max_rot_acc = 7;
inline bool Message_PatrolRoute::has_max_rot_acc() const {
  return this != internal_default_instance() && max_rot_acc_ != NULL;
}
inline const ::google::protobuf::DoubleValue& Message_PatrolRoute::max_rot_acc() const {
  const ::google::protobuf::DoubleValue* p = max_rot_acc_;
  // @@protoc_insertion_point(field_get:Message_PatrolRoute.max_rot_acc)
  return p != NULL ? *p : *reinterpret_cast<const ::google::protobuf::DoubleValue*>(
      &::google::protobuf::_DoubleValue_default_instance_);
}
inline ::google::protobuf::DoubleValue* Message_PatrolRoute::release_max_rot_acc() {
  // @@protoc_insertion_point(field_release:Message_PatrolRoute.max_rot_acc)
  
  ::google::protobuf::DoubleValue* temp = max_rot_acc_;
  max_rot_acc_ = NULL;
  return temp;
}
inline ::google::protobuf::DoubleValue* Message_PatrolRoute::mutable_max_rot_acc() {
  
  if (max_rot_acc_ == NULL) {
    max_rot_acc_ = new ::google::protobuf::DoubleValue;
  }
  // @@protoc_insertion_point(field_mutable:Message_PatrolRoute.max_rot_acc)
  return max_rot_acc_;
}
inline void Message_PatrolRoute::set_allocated_max_rot_acc(::google::protobuf::DoubleValue* max_rot_acc) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(max_rot_acc_);
  }
  if (max_rot_acc) {
    ::google::protobuf::Arena* submessage_arena =
      reinterpret_cast< ::google::protobuf::MessageLite*>(max_rot_acc)->GetArena();
    if (message_arena != submessage_arena) {
      max_rot_acc = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, max_rot_acc, submessage_arena);
    }
    
  } else {
    
  }
  max_rot_acc_ = max_rot_acc;
  // @@protoc_insertion_point(field_set_allocated:Message_PatrolRoute.max_rot_acc)
}

// -------------------------------------------------------------------

// Message_Map

// string map_directory = 1;
inline void Message_Map::clear_map_directory() {
  map_directory_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Message_Map::map_directory() const {
  // @@protoc_insertion_point(field_get:Message_Map.map_directory)
  return map_directory_.GetNoArena();
}
inline void Message_Map::set_map_directory(const ::std::string& value) {
  
  map_directory_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Message_Map.map_directory)
}
#if LANG_CXX11
inline void Message_Map::set_map_directory(::std::string&& value) {
  
  map_directory_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Message_Map.map_directory)
}
#endif
inline void Message_Map::set_map_directory(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  map_directory_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Message_Map.map_directory)
}
inline void Message_Map::set_map_directory(const char* value, size_t size) {
  
  map_directory_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Message_Map.map_directory)
}
inline ::std::string* Message_Map::mutable_map_directory() {
  
  // @@protoc_insertion_point(field_mutable:Message_Map.map_directory)
  return map_directory_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Message_Map::release_map_directory() {
  // @@protoc_insertion_point(field_release:Message_Map.map_directory)
  
  return map_directory_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Message_Map::set_allocated_map_directory(::std::string* map_directory) {
  if (map_directory != NULL) {
    
  } else {
    
  }
  map_directory_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), map_directory);
  // @@protoc_insertion_point(field_set_allocated:Message_Map.map_directory)
}

// .Message_MapHeader header = 2;
inline bool Message_Map::has_header() const {
  return this != internal_default_instance() && header_ != NULL;
}
inline void Message_Map::clear_header() {
  if (GetArenaNoVirtual() == NULL && header_ != NULL) {
    delete header_;
  }
  header_ = NULL;
}
inline const ::Message_MapHeader& Message_Map::header() const {
  const ::Message_MapHeader* p = header_;
  // @@protoc_insertion_point(field_get:Message_Map.header)
  return p != NULL ? *p : *reinterpret_cast<const ::Message_MapHeader*>(
      &::_Message_MapHeader_default_instance_);
}
inline ::Message_MapHeader* Message_Map::release_header() {
  // @@protoc_insertion_point(field_release:Message_Map.header)
  
  ::Message_MapHeader* temp = header_;
  header_ = NULL;
  return temp;
}
inline ::Message_MapHeader* Message_Map::mutable_header() {
  
  if (header_ == NULL) {
    header_ = new ::Message_MapHeader;
  }
  // @@protoc_insertion_point(field_mutable:Message_Map.header)
  return header_;
}
inline void Message_Map::set_allocated_header(::Message_MapHeader* header) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete header_;
  }
  if (header) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      header = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, header, submessage_arena);
    }
    
  } else {
    
  }
  header_ = header;
  // @@protoc_insertion_point(field_set_allocated:Message_Map.header)
}

// repeated .Message_MapPos normal_pos_list = 3;
inline int Message_Map::normal_pos_list_size() const {
  return normal_pos_list_.size();
}
inline void Message_Map::clear_normal_pos_list() {
  normal_pos_list_.Clear();
}
inline const ::Message_MapPos& Message_Map::normal_pos_list(int index) const {
  // @@protoc_insertion_point(field_get:Message_Map.normal_pos_list)
  return normal_pos_list_.Get(index);
}
inline ::Message_MapPos* Message_Map::mutable_normal_pos_list(int index) {
  // @@protoc_insertion_point(field_mutable:Message_Map.normal_pos_list)
  return normal_pos_list_.Mutable(index);
}
inline ::Message_MapPos* Message_Map::add_normal_pos_list() {
  // @@protoc_insertion_point(field_add:Message_Map.normal_pos_list)
  return normal_pos_list_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::Message_MapPos >*
Message_Map::mutable_normal_pos_list() {
  // @@protoc_insertion_point(field_mutable_list:Message_Map.normal_pos_list)
  return &normal_pos_list_;
}
inline const ::google::protobuf::RepeatedPtrField< ::Message_MapPos >&
Message_Map::normal_pos_list() const {
  // @@protoc_insertion_point(field_list:Message_Map.normal_pos_list)
  return normal_pos_list_;
}

// repeated .Message_MapLine normal_line_list = 4;
inline int Message_Map::normal_line_list_size() const {
  return normal_line_list_.size();
}
inline void Message_Map::clear_normal_line_list() {
  normal_line_list_.Clear();
}
inline const ::Message_MapLine& Message_Map::normal_line_list(int index) const {
  // @@protoc_insertion_point(field_get:Message_Map.normal_line_list)
  return normal_line_list_.Get(index);
}
inline ::Message_MapLine* Message_Map::mutable_normal_line_list(int index) {
  // @@protoc_insertion_point(field_mutable:Message_Map.normal_line_list)
  return normal_line_list_.Mutable(index);
}
inline ::Message_MapLine* Message_Map::add_normal_line_list() {
  // @@protoc_insertion_point(field_add:Message_Map.normal_line_list)
  return normal_line_list_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::Message_MapLine >*
Message_Map::mutable_normal_line_list() {
  // @@protoc_insertion_point(field_mutable_list:Message_Map.normal_line_list)
  return &normal_line_list_;
}
inline const ::google::protobuf::RepeatedPtrField< ::Message_MapLine >&
Message_Map::normal_line_list() const {
  // @@protoc_insertion_point(field_list:Message_Map.normal_line_list)
  return normal_line_list_;
}

// repeated .Message_AdvancedPoint advanced_point_list = 6;
inline int Message_Map::advanced_point_list_size() const {
  return advanced_point_list_.size();
}
inline void Message_Map::clear_advanced_point_list() {
  advanced_point_list_.Clear();
}
inline const ::Message_AdvancedPoint& Message_Map::advanced_point_list(int index) const {
  // @@protoc_insertion_point(field_get:Message_Map.advanced_point_list)
  return advanced_point_list_.Get(index);
}
inline ::Message_AdvancedPoint* Message_Map::mutable_advanced_point_list(int index) {
  // @@protoc_insertion_point(field_mutable:Message_Map.advanced_point_list)
  return advanced_point_list_.Mutable(index);
}
inline ::Message_AdvancedPoint* Message_Map::add_advanced_point_list() {
  // @@protoc_insertion_point(field_add:Message_Map.advanced_point_list)
  return advanced_point_list_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::Message_AdvancedPoint >*
Message_Map::mutable_advanced_point_list() {
  // @@protoc_insertion_point(field_mutable_list:Message_Map.advanced_point_list)
  return &advanced_point_list_;
}
inline const ::google::protobuf::RepeatedPtrField< ::Message_AdvancedPoint >&
Message_Map::advanced_point_list() const {
  // @@protoc_insertion_point(field_list:Message_Map.advanced_point_list)
  return advanced_point_list_;
}

// repeated .Message_AdvancedLine advanced_line_list = 7;
inline int Message_Map::advanced_line_list_size() const {
  return advanced_line_list_.size();
}
inline void Message_Map::clear_advanced_line_list() {
  advanced_line_list_.Clear();
}
inline const ::Message_AdvancedLine& Message_Map::advanced_line_list(int index) const {
  // @@protoc_insertion_point(field_get:Message_Map.advanced_line_list)
  return advanced_line_list_.Get(index);
}
inline ::Message_AdvancedLine* Message_Map::mutable_advanced_line_list(int index) {
  // @@protoc_insertion_point(field_mutable:Message_Map.advanced_line_list)
  return advanced_line_list_.Mutable(index);
}
inline ::Message_AdvancedLine* Message_Map::add_advanced_line_list() {
  // @@protoc_insertion_point(field_add:Message_Map.advanced_line_list)
  return advanced_line_list_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::Message_AdvancedLine >*
Message_Map::mutable_advanced_line_list() {
  // @@protoc_insertion_point(field_mutable_list:Message_Map.advanced_line_list)
  return &advanced_line_list_;
}
inline const ::google::protobuf::RepeatedPtrField< ::Message_AdvancedLine >&
Message_Map::advanced_line_list() const {
  // @@protoc_insertion_point(field_list:Message_Map.advanced_line_list)
  return advanced_line_list_;
}

// repeated .Message_AdvancedCurve advanced_curve_list = 8;
inline int Message_Map::advanced_curve_list_size() const {
  return advanced_curve_list_.size();
}
inline void Message_Map::clear_advanced_curve_list() {
  advanced_curve_list_.Clear();
}
inline const ::Message_AdvancedCurve& Message_Map::advanced_curve_list(int index) const {
  // @@protoc_insertion_point(field_get:Message_Map.advanced_curve_list)
  return advanced_curve_list_.Get(index);
}
inline ::Message_AdvancedCurve* Message_Map::mutable_advanced_curve_list(int index) {
  // @@protoc_insertion_point(field_mutable:Message_Map.advanced_curve_list)
  return advanced_curve_list_.Mutable(index);
}
inline ::Message_AdvancedCurve* Message_Map::add_advanced_curve_list() {
  // @@protoc_insertion_point(field_add:Message_Map.advanced_curve_list)
  return advanced_curve_list_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::Message_AdvancedCurve >*
Message_Map::mutable_advanced_curve_list() {
  // @@protoc_insertion_point(field_mutable_list:Message_Map.advanced_curve_list)
  return &advanced_curve_list_;
}
inline const ::google::protobuf::RepeatedPtrField< ::Message_AdvancedCurve >&
Message_Map::advanced_curve_list() const {
  // @@protoc_insertion_point(field_list:Message_Map.advanced_curve_list)
  return advanced_curve_list_;
}

// repeated .Message_AdvancedArea advanced_area_list = 9;
inline int Message_Map::advanced_area_list_size() const {
  return advanced_area_list_.size();
}
inline void Message_Map::clear_advanced_area_list() {
  advanced_area_list_.Clear();
}
inline const ::Message_AdvancedArea& Message_Map::advanced_area_list(int index) const {
  // @@protoc_insertion_point(field_get:Message_Map.advanced_area_list)
  return advanced_area_list_.Get(index);
}
inline ::Message_AdvancedArea* Message_Map::mutable_advanced_area_list(int index) {
  // @@protoc_insertion_point(field_mutable:Message_Map.advanced_area_list)
  return advanced_area_list_.Mutable(index);
}
inline ::Message_AdvancedArea* Message_Map::add_advanced_area_list() {
  // @@protoc_insertion_point(field_add:Message_Map.advanced_area_list)
  return advanced_area_list_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::Message_AdvancedArea >*
Message_Map::mutable_advanced_area_list() {
  // @@protoc_insertion_point(field_mutable_list:Message_Map.advanced_area_list)
  return &advanced_area_list_;
}
inline const ::google::protobuf::RepeatedPtrField< ::Message_AdvancedArea >&
Message_Map::advanced_area_list() const {
  // @@protoc_insertion_point(field_list:Message_Map.advanced_area_list)
  return advanced_area_list_;
}

// repeated .Message_PatrolRoute patrol_route_list = 10;
inline int Message_Map::patrol_route_list_size() const {
  return patrol_route_list_.size();
}
inline void Message_Map::clear_patrol_route_list() {
  patrol_route_list_.Clear();
}
inline const ::Message_PatrolRoute& Message_Map::patrol_route_list(int index) const {
  // @@protoc_insertion_point(field_get:Message_Map.patrol_route_list)
  return patrol_route_list_.Get(index);
}
inline ::Message_PatrolRoute* Message_Map::mutable_patrol_route_list(int index) {
  // @@protoc_insertion_point(field_mutable:Message_Map.patrol_route_list)
  return patrol_route_list_.Mutable(index);
}
inline ::Message_PatrolRoute* Message_Map::add_patrol_route_list() {
  // @@protoc_insertion_point(field_add:Message_Map.patrol_route_list)
  return patrol_route_list_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::Message_PatrolRoute >*
Message_Map::mutable_patrol_route_list() {
  // @@protoc_insertion_point(field_mutable_list:Message_Map.patrol_route_list)
  return &patrol_route_list_;
}
inline const ::google::protobuf::RepeatedPtrField< ::Message_PatrolRoute >&
Message_Map::patrol_route_list() const {
  // @@protoc_insertion_point(field_list:Message_Map.patrol_route_list)
  return patrol_route_list_;
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_map_2eproto__INCLUDED
